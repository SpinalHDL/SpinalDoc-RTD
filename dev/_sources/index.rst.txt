.. SpinalHDL documentation master file, created by
   sphinx-quickstart on Mon Oct 29 19:54:23 2018.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.


.. toctree::
   :maxdepth: 2

   SpinalHDL/About SpinalHDL/index
   SpinalHDL/Getting Started/index
   SpinalHDL/Data types/index
   SpinalHDL/Structuring/index
   SpinalHDL/Semantic/index
   SpinalHDL/Sequential logic/index
   SpinalHDL/Design errors/index
   SpinalHDL/Other language features/index
   SpinalHDL/Libraries/index
   SpinalHDL/Simulation/index
   SpinalHDL/Formal verification/index
   SpinalHDL/Examples/index
   SpinalHDL/Legacy/index
   SpinalHDL/miscelenea/index
   SpinalHDL/Developers area/index


Welcome to SpinalHDL's documentation!
=====================================


Site purpose and structure
--------------------------

This site presents the *SpinalHDL* language and how to use it on concrete examples.

If you are learning the language from scratch, `this presentation <https://cdn.jsdelivr.net/gh/SpinalHDL/SpinalDoc@master/presentation/en/presentation.pdf>`_ is probably a good starting point.


What is SpinalHDL ?
-------------------

SpinalHDL is an `open source <https://github.com/SpinalHDL/SpinalHDL>`_ high-level hardware description language. It can be used as an alternative to VHDL or Verilog and has several advantages over them.

Also, SpinalHDL is not an HLS approach. Its goal is not to push something abstract into flip-flops and gates, but by using simple elements (flip-flops, gates, if / case statments) create a new abstraction level and help the designer to reuse their code and not write the same thing over and over again.

.. note::
   SpinalHDL is *fully interoperable* with standard VHDL/Verilog-based EDA tools (simulators and synthetizers) as the output generated by the toolchain could be VHDL or Verilog. 
   It also enables mixed designs where SpinalHDL components inter-operate with VHDL or Verilog IPs.

Advantages of using SpinalHDL over VHDL / Verilog
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

As SpinalHDL is based on a high-level language, it provides several advantages to improve your hardware coding:


#. **No more endless wiring** - Create and connect complex buses like AXI in one single line.
#. **Evolving capabilities** - Create your own bus definitions and abstraction layers.
#. **Reduce code size** - By a high factor, especially for wiring. This enables you to have a better overview of your code base, increase your productivity and create fewer headaches.
#. **Free and user friendly IDE** - Thanks to Scala tools for auto-completion, error highlighting, navigation shortcuts, and many others.
#. **Powerful and easy type conversions** - Bidirectional translation between any data type and bits. Useful when loading a complex data structure from a CPU interface.
#. **Loop detection** - Tools check that there are no combinatorial loops / latches.
#. **Clock domain safety** - The tools inform you that there are no unintentional clock domain crossings.
#. **Generic design** - There are no restrictions to the genericity of your hardware description by using Scala constructs.

License
^^^^^^^

SpinalHDL uses two licenses, one for spinal.core, one for spinal.lib and everything else in the repo.

**spinal.core** (the compiler) is under the LGPL license, which could be summarized with following statements:


* You can make money with your SpinalHDL description and its generated RTL.
* You don't have to share your SpinalHDL description and its generated RTL.
* There are no fees and no royalties.
* If your make improvements to the SpinalHDL core, please share your modifications to make the tool better for everybody.

**spinal.lib** (a general purpose library of components/tools/interfaces) is under the permissive MIT license.

Getting started
---------------

Want to try it for yourself? Then jump to the :ref:`getting started section <getting_started>` and have fun!

Links
-----

| SpinalHDL repository:
| `https://github.com/SpinalHDL/SpinalHDL <https://github.com/SpinalHDL/SpinalHDL>`_

| A short show case (PDF):
| `motivation.pdf <https://cdn.jsdelivr.net/gh/SpinalHDL/SpinalDoc@master/presentation/en/motivation.pdf>`_

| Presentation of the language (PDF):
| `presentation.pdf <https://cdn.jsdelivr.net/gh/SpinalHDL/SpinalDoc@master/presentation/en/presentation.pdf>`_

| SBT base project:
| `https://github.com/SpinalHDL/SpinalTemplateSbt <https://github.com/SpinalHDL/SpinalTemplateSbt>`_

| Jupyter bootcamp:
| `https://github.com/SpinalHDL/Spinal-bootcamp <https://github.com/SpinalHDL/Spinal-bootcamp>`_

| Workshop:
| `https://github.com/SpinalHDL/SpinalWorkshop <https://github.com/SpinalHDL/SpinalWorkshop>`_

| VexRiscv CPU and SoC:
| `https://github.com/SpinalHDL/VexRiscv <https://github.com/SpinalHDL/VexRiscv>`_

| StackOverflow (tag: SpinalHDL) :
| `StackOverflow <https://stackoverflow.com/>`_

| Google group:
| `https://groups.google.com/forum/#!forum/spinalhdl-hardware-description-language <https://groups.google.com/forum/#!forum/spinalhdl-hardware-description-language>`_

| Donation channel :
| `https://opencollective.com/spinalhdl <https://opencollective.com/spinalhdl>`_




.. image:: https://badges.gitter.im/SpinalHDL/SpinalHDL.svg
   :target: https://gitter.im/SpinalHDL/SpinalHDL?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge
   :alt: Join the chat at https://gitter.im/SpinalHDL/SpinalHDL


