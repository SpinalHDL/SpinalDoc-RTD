msgid ""
msgstr ""
"Project-Id-Version: SpinalHDLReport-Msgid-Bugs-To:POT-Creation-Date:2023-12-"
"01 11:48+0800PO-Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME "
"<EMAIL@ADDRESS>Language:zh_CNLanguage-Team:zh_CN <LL@li.org>Plural-"
"Forms:nplurals=1; plural=0;MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESSPOT-Creation-Date:2023-12-02 00:23+0800PO-"
"Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME <EMAIL@ADDRESS"
">Language-Team:LANGUAGE <LL@li.org>MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"PO-Revision-Date: 2023-12-15 01:17+0000\n"
"Last-Translator: Readon <xydarcher@qq.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"spinaldoc-rtd/spinalhdlformal-verificationindex/zh_Hans/>\n"
"Language: zh_CN\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bitGenerated-By:Babel 2.13.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.3\n"

#: ../../SpinalHDL/Formal verification/index.rst:3
msgid "Formal verification"
msgstr "形式化验证"

#: ../../SpinalHDL/Formal verification/index.rst:7
msgid "General"
msgstr "介绍"

#: ../../SpinalHDL/Formal verification/index.rst:9
msgid ""
"SpinalHDL allows to generate a subset of the SystemVerilog Assertions (SVA)."
" Mostly assert, assume, cover and a few others."
msgstr ""
"SpinalHDL 允许生成 SystemVerilog 断言 (SVA) "
"的子集。主要是断言（assert）、假设（assume）、覆盖（cover）和其他一些内容。"

#: ../../SpinalHDL/Formal verification/index.rst:11
msgid ""
"In addition it provide a formal verification backend which allows to "
"directly run the formal verification in the open-source Symbi-Yosys "
"toolchain."
msgstr "此外，它还提供了形式化验证后端，允许直接在开源 Symbi-Yosys "
"工具链中运行形式化验证。"

#: ../../SpinalHDL/Formal verification/index.rst:16
msgid "Formal backend"
msgstr "形式化验证后端"

#: ../../SpinalHDL/Formal verification/index.rst:18
msgid "You can run the formal verification of a component via:"
msgstr "您可以通过以下方式运行组件的形式化验证："

#: ../../SpinalHDL/Formal verification/index.rst:28
msgid "Currently, 3 modes are supported :"
msgstr "目前支持3种模式："

#: ../../SpinalHDL/Formal verification/index.rst:30
msgid "withBMC(depth)"
msgstr "withBMC(depth)"

#: ../../SpinalHDL/Formal verification/index.rst:31
msgid "withProve(depth)"
msgstr "withProve(depth)"

#: ../../SpinalHDL/Formal verification/index.rst:32
msgid "withCover(depth)"
msgstr "withCover(depth)"

#: ../../SpinalHDL/Formal verification/index.rst:35
msgid "Installing requirements"
msgstr "安装要求"

#: ../../SpinalHDL/Formal verification/index.rst:37
msgid ""
"To install the Symbi-Yosys, you have a few options. You can fetch a "
"precompiled package at:"
msgstr "要安装 Symbi-Yosys，您有几种选择。您可以在以下位置获取预编译包："

#: ../../SpinalHDL/Formal verification/index.rst:39
msgid "https://github.com/YosysHQ/oss-cad-suite-build/releases"
msgstr "https://github.com/YosysHQ/oss-cad-suite-build/releases"

#: ../../SpinalHDL/Formal verification/index.rst:40
msgid ""
"https://github.com/YosysHQ/fpga-toolchain/releases (EOL - superseded by oss-"
"cad-suite)"
msgstr ""
"https://github.com/YosysHQ/fpga-toolchain/releases（EOL - 由 oss-cad-suite "
"取代）"

#: ../../SpinalHDL/Formal verification/index.rst:42
msgid "Or you can compile things from scratch :"
msgstr "或者你可以从头开始编译："

#: ../../SpinalHDL/Formal verification/index.rst:44
msgid "https://symbiyosys.readthedocs.io/en/latest/install.html"
msgstr "https://symbiyosys.readthedocs.io/en/latest/install.html"

#: ../../SpinalHDL/Formal verification/index.rst:48
msgid "Example"
msgstr "示例"

#: ../../SpinalHDL/Formal verification/index.rst:52
msgid "External assertions"
msgstr "外部断言"

#: ../../SpinalHDL/Formal verification/index.rst:54
msgid ""
"Here is an example of a simple counter and the corresponding formal "
"testbench."
msgstr "这是一个简单计数器和相应的形式化测试代码的示例。"

#: ../../SpinalHDL/Formal verification/index.rst:91
msgid "Internal assertions"
msgstr "内部断言"

#: ../../SpinalHDL/Formal verification/index.rst:93
msgid "If you want you can embed formal statements directly into the DUT:"
msgstr "如果您愿意，可以将形式化验证语句直接嵌入到 DUT 中："

#: ../../SpinalHDL/Formal verification/index.rst:120
msgid "External stimulus"
msgstr "外部激励"

#: ../../SpinalHDL/Formal verification/index.rst:122
msgid ""
"If your DUT has inputs, you need to drive them from the testbench. You can "
"use all the regular hardware statements to do it, but you can also use the "
"formal `anyseq`, `anyconst`, `allseq`, `allconst` statement:"
msgstr ""
"如果您的 DUT "
"有输入，您需要从测试代码中驱动它们。您可以使用所有常规硬件语句来执行此操作，"
"但您也可以使用形式化验证中的 `anyseq`、`anyconst`、`allseq`、`allconst` "
"语句："

#: ../../SpinalHDL/Formal verification/index.rst:151
msgid "More assertions / past"
msgstr "更多关于断言/past（以前某个时钟内的状态）的例子"

#: ../../SpinalHDL/Formal verification/index.rst:153
msgid ""
"For instance we can check that the value is counting up (if not already at "
"10):"
msgstr "例如，我们可以检查该值是否在正向计数（如果尚未达到 10）："

#: ../../SpinalHDL/Formal verification/index.rst:169
msgid "Assuming memory content"
msgstr "假设内存中的内容"

#: ../../SpinalHDL/Formal verification/index.rst:171
msgid ""
"Here is an example where we want to prevent the value ``1`` from ever being "
"present in a memory :"
msgstr "这是一个示例，我们希望防止值 ``1`` 出现在内存中："

#: ../../SpinalHDL/Formal verification/index.rst:207
msgid "Utilities and primitives"
msgstr "实用工具和原语"

#: ../../SpinalHDL/Formal verification/index.rst:210
msgid "Assertions / clock / reset"
msgstr "断言/时钟/复位"

#: ../../SpinalHDL/Formal verification/index.rst:212
msgid ""
"Assertions are always clocked and disabled during resets. This also apply "
"for assumes and covers."
msgstr "断言（assert）是一直被时钟驱动的，但在复位期间被禁用。这也适用于假设（assume"
"）和覆盖（cover）。"

#: ../../SpinalHDL/Formal verification/index.rst:214
msgid "If you want to keep your assertion enabled during reset you can do:"
msgstr "如果您想在复位期间保持断言被检查，您可以执行以下操作："

#: ../../SpinalHDL/Formal verification/index.rst:224
msgid "Specifying the initial value of a signal"
msgstr "指定信号的初始值"

#: ../../SpinalHDL/Formal verification/index.rst:226
msgid ""
"For instance, for the reset signal of the current clockdomain (usefull at "
"the top)"
msgstr "例如，对于当前时钟域的复位信号（在顶部有用）"

#: ../../SpinalHDL/Formal verification/index.rst:233
msgid "Specifying a initial assumption"
msgstr "指定初始假设"

#: ../../SpinalHDL/Formal verification/index.rst:240
msgid "Memory content (Mem)"
msgstr "内存内容（Mem）检查"

#: ../../SpinalHDL/Formal verification/index.rst:242
msgid ""
"If you have a Mem in your design, and you want to check its content, you can"
" do it the following ways :"
msgstr "如果您的设计中有 Mem，并且想要检查其内容，可以通过以下方式进行："

#: ../../SpinalHDL/Formal verification/index.rst:257
msgid "Specifying assertion in the reset scope"
msgstr "在复位的时候进行断言检查，可以这样做"

#: ../../SpinalHDL/Formal verification/index.rst:267
msgid "Formal primitives"
msgstr "形式化验证的原语"

#: ../../SpinalHDL/Formal verification/index.rst:273
msgid "Syntax"
msgstr "语法"

#: ../../SpinalHDL/Formal verification/index.rst:274
msgid "Returns"
msgstr "返回类型"

#: ../../SpinalHDL/Formal verification/index.rst:275
msgid "Description"
msgstr "描述"

#: ../../SpinalHDL/Formal verification/index.rst:276
msgid "``assert(Bool)``"
msgstr "``assert(Bool)``"

#: ../../SpinalHDL/Formal verification/index.rst:279
msgid "``assume(Bool)``"
msgstr "``assume(Bool)``"

#: ../../SpinalHDL/Formal verification/index.rst:282
msgid "``cover(Bool)``"
msgstr "``cover(Bool)``"

#: ../../SpinalHDL/Formal verification/index.rst
msgid "``past(that : T, delay : Int)``"
msgstr "``past(that : T, delay : Int)``"

#: ../../SpinalHDL/Formal verification/index.rst
msgid "``past(that : T)``"
msgstr "``past(that : T)``"

#: ../../SpinalHDL/Formal verification/index.rst:287
msgid "T"
msgstr "T"

#: ../../SpinalHDL/Formal verification/index.rst:288
msgid "Return ``that`` delayed by ``delay`` cycles. (default 1 cycle)"
msgstr "返回 ``delay`` 周期以前的 ``that``值 。 （默认1个周期）"

#: ../../SpinalHDL/Formal verification/index.rst:289
msgid "``rose(that : Bool)``"
msgstr "``rose(that : Bool)``"

#: ../../SpinalHDL/Formal verification/index.rst:290
#: verification/index.rst:293 verification/index.rst:296
#: verification/index.rst:299 verification/index.rst:302
#: verification/index.rst:305 verification/index.rst:308
msgid "Bool"
msgstr "Bool"

#: ../../SpinalHDL/Formal verification/index.rst:291
msgid "Return True when ``that`` transitioned from False to True"
msgstr "当 ``that`` 从 False 变为 True 时返回 True"

#: ../../SpinalHDL/Formal verification/index.rst:292
msgid "``fell(that : Bool)``"
msgstr "``fell(that : Bool)``"

#: ../../SpinalHDL/Formal verification/index.rst:294
msgid "Return True when ``that`` transitioned from True to False"
msgstr "当 ``that`` 从 True 变为 False 时返回 True"

#: ../../SpinalHDL/Formal verification/index.rst:295
msgid "``changed(that : Bool)``"
msgstr "``changed(that : Bool)``"

#: ../../SpinalHDL/Formal verification/index.rst:297
msgid ""
"Return True when ``that`` current value changed between compared to the last"
" cycle"
msgstr "当 ``that`` 当前值与上一个周期相比发生变化时返回 True"

#: ../../SpinalHDL/Formal verification/index.rst:298
msgid "``stable(that : Bool)``"
msgstr "``stable(that : Bool)``"

#: ../../SpinalHDL/Formal verification/index.rst:300
msgid ""
"Return True when ``that`` current value didn't changed between compared to "
"the last cycle"
msgstr "当 ``that`` 当前值与上一个周期相比没有改变时返回 True"

#: ../../SpinalHDL/Formal verification/index.rst:301
msgid "``initstate()``"
msgstr "``initstate()``"

#: ../../SpinalHDL/Formal verification/index.rst:303
msgid "Return True the first cycle"
msgstr "第一个周期时返回 True"

#: ../../SpinalHDL/Formal verification/index.rst:304
msgid "``pastValid()``"
msgstr "``pastValid()``"

#: ../../SpinalHDL/Formal verification/index.rst:306
msgid ""
"Returns True when the past value is valid (False on the first cycle). "
"Recommended to be used with each application of ``past``, ``rose``, "
"``fell``, ``changed`` and ``stable``."
msgstr ""
"当过去的值有效时返回 True（第一个周期为 False）。建议在 ``past``, ``rose``, "
"``fell``, ``changed`` 和 ``stable`` 每次使用的地方均使用它。"

#: ../../SpinalHDL/Formal verification/index.rst:307
msgid "``pastValidAfterReset()``"
msgstr "``pastValidAfterReset()``"

#: ../../SpinalHDL/Formal verification/index.rst:309
msgid ""
"Simliar to ``pastValid``, where only difference is that this would take "
"reset into account. Can be understood as ``pastValid & past(!reset)``."
msgstr ""
"与“pastValid”类似，唯一的区别是这会考虑重置。可以理解为 ``pastValid & "
"past(!reset)``，同步逻辑中建议使用。"

#: ../../SpinalHDL/Formal verification/index.rst:311
msgid "Note that you can use the init statement on past:"
msgstr "请注意，您可以对past的返回值使用 init 语句："

#: ../../SpinalHDL/Formal verification/index.rst:320
msgid "Limitations"
msgstr "局限性"

#: ../../SpinalHDL/Formal verification/index.rst:322
msgid ""
"There is no support for unclocked assertions. But their usage in third party"
" formal verification examples seems mostly code style related."
msgstr "不支持非时钟驱动的断言。但它们在第三方形式化验证示例中有这样使用，似乎主要与"
"代码风格相关。"

#: ../../SpinalHDL/Formal verification/index.rst:326
msgid "Naming polices"
msgstr "命名策略"

#: ../../SpinalHDL/Formal verification/index.rst:328
msgid ""
"All formal validation related functions return Area or Composite "
"(preferred), and naming as formalXXXX. ``formalContext`` can be used to "
"create formal related logic, there could be ``formalAsserts``, "
"``formalAssumes`` and ``formalCovers`` in it."
msgstr ""
"所有与形式验证相关的函数都返回 Area 或 "
"Composite（首选），并命名为formalXXXX。 ``formalContext`` "
"可用于创建形式相关逻辑，还有可能是 ``formalAsserts``、 ``formalAssumes`` 和 "
"``formalCovers`` 。"

#: ../../SpinalHDL/Formal verification/index.rst:332
msgid "For Component"
msgstr "对于组件"

#: ../../SpinalHDL/Formal verification/index.rst:333
msgid ""
"The minimum required assertions internally in a ``Component`` for \"prove\" "
"can be named as ``formalAsserts``."
msgstr "证明模式中需要的， ``Component`` 内部所需的最少断言可以命名为 "
"``formalAsserts``。"

#: ../../SpinalHDL/Formal verification/index.rst:336
msgid "For interfaces implement IMasterSlave"
msgstr "对于实现 IMasterSlave的接口"

#: ../../SpinalHDL/Formal verification/index.rst:337
msgid ""
"There could be functions in name ``formalAssertsMaster``, "
"``formalAssertsSlave``, ``formalAssumesMaster``, ``formalAssumesSlave`` or "
"``formalCovers``. Master/Slave are target interface type, so that "
"``formalAssertsMaster`` can be understand as \"formal verfication assertions"
" for master interface\"."
msgstr ""
"可能存在以 ``formalAssertsMaster``, ``formalAssertsSlave``, "
"``formalAssumesMaster``, ``formalAssumesSlave`` or ``formalCovers`` "
"命名的函数。 Master/Slave 是目标接口类型，因此，``formalAssertsMaster`` "
"可以理解为“主接口的形式化验证断言”。"
