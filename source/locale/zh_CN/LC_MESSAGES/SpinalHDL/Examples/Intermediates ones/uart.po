msgid ""
msgstr ""
"Project-Id-Version: SpinalHDLReport-Msgid-Bugs-To:POT-Creation-Date:2023-12-"
"01 11:48+0800PO-Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME "
"<EMAIL@ADDRESS>Language:zh_CNLanguage-Team:zh_CN <LL@li.org>Plural-"
"Forms:nplurals=1; plural=0;MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESSPOT-Creation-Date:2023-12-02 00:23+0800PO-"
"Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME <EMAIL@ADDRESS"
">Language-Team:LANGUAGE <LL@li.org>MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"PO-Revision-Date: 2023-12-15 15:56+0000\n"
"Last-Translator: tsy0123 <675526215@qq.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"spinaldoc-rtd/spinalhdlexamplesintermediates-onesuart/zh_Hans/>\n"
"Language: zh_CN\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bitGenerated-By:Babel 2.13.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.3\n"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:4
msgid "UART"
msgstr "串口"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:7
msgid "Specification"
msgstr "规范"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:9
msgid ""
"This UART controller tutorial is based on `this "
"<https://github.com/SpinalHDL/SpinalHDL/tree/master/lib/src/main/scala/spinal/lib/com/uart>`_"
" implementation."
msgstr ""
"本UART控制器教程基于 `此文件 <https://github.com/SpinalHDL/SpinalHDL/tree/"
"master/lib/src/main/scala/spinal/lib/com/uart>`_ 实现。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:11
msgid "This implementation is characterized by:"
msgstr "该实现的特征有："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:14
msgid ""
"ClockDivider/Parity/StopBit/DataLength configs are set by the component "
"inputs."
msgstr "ClockDivider/Parity/StopBit/DataLength的配置由组件输入设置。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:15
msgid ""
"RXD input is filtered by using a sampling window of N samples and a majority"
" vote."
msgstr "RXD输入通过使用N个样本的采样窗口和多数投票法进行滤波。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:18
msgid "Interfaces of this UartCtrl are:"
msgstr "该UartCtrl控制端口为："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:24 ones/uart.rst:53
#: ones/uart.rst:133 ones/uart.rst:218
msgid "Name"
msgstr "名称"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:25 ones/uart.rst:54
#: ones/uart.rst:134 ones/uart.rst:219
msgid "Type"
msgstr "类型"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:26 ones/uart.rst:55
#: ones/uart.rst:135 ones/uart.rst:220
msgid "Description"
msgstr "描述"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:27
msgid "config"
msgstr "config"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:28
msgid "UartCtrlConfig"
msgstr "UartCtrlConfig"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:29
msgid "Give all configurations to the controller"
msgstr "将所有配置发给控制器"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:30 ones/uart.rst:142
msgid "write"
msgstr "write"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:31 ones/uart.rst:143
msgid "Stream[Bits]"
msgstr "Stream[Bits]"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:32
msgid "Port used by the system to give transmission order to the controller"
msgstr "系统向控制器发送传输顺序所用的端口"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:33 ones/uart.rst:227
msgid "read"
msgstr "read"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:34 ones/uart.rst:228
msgid "Flow[Bits]"
msgstr "Flow[Bits]"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:35 ones/uart.rst:229
msgid ""
"Port used by the controller to notify the system about a successfully "
"received frame"
msgstr "控制器发送已成功接收帧给系统所用的端口"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:36
msgid "uart"
msgstr "uart"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:37
msgid "Uart"
msgstr "Uart"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:38
msgid "Uart interface with rxd / txd"
msgstr "带rxd/txd的Uart接口"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:42
msgid "Data structures"
msgstr "数据结构"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:44
msgid ""
"Before implementing the controller itself we need to define some data "
"structures."
msgstr "在实现控制器本体之前，我们需要定义一些数据结构。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:47
msgid "Controller construction parameters"
msgstr "控制器构造参数"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:56
msgid "dataWidthMax"
msgstr "dataWidthMax"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:57 ones/uart.rst:60
#: ones/uart.rst:63 ones/uart.rst:66 ones/uart.rst:69
msgid "Int"
msgstr "Int"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:58
msgid ""
"Maximum number of data bits that could be sent using a single UART frame"
msgstr "使用单个UART帧可以发送的最大数据位数"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:59
msgid "clockDividerWidth"
msgstr "clockDividerWidth"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:61
msgid "Number of bits that the clock divider has"
msgstr "时钟分频器的位数"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:62
msgid "preSamplingSize"
msgstr "preSamplingSize"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:64
msgid "Number of samples to drop at the beginning of the sampling window"
msgstr "采样窗口开始时要丢弃的样本数"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:65
msgid "samplingSize"
msgstr "samplingSize"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:67
msgid ""
"Number of samples use at the middle of the window to get the filtered RXD "
"value"
msgstr "使用多个窗口中部的样本来获得过滤后的 RXD 值"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:68
msgid "postSamplingSize"
msgstr "postSamplingSize"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:70
msgid "Number of samples to drop at the end of the sampling window"
msgstr "采样窗口结束时丢弃的样本数"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:73
msgid ""
"To make the implementation easier let's assume that ``preSamplingSize + "
"samplingSize + postSamplingSize`` is always a power of two. If so we can "
"skip resetting counters in a few places."
msgstr ""
"为了使实现更容易，我们假设 ``preSamplingSize + samplingSize + "
"postSamplingSize`` 始终是 2 "
"的幂次方。这样做可以在一些地方跳过计数器清零操作。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:76
msgid ""
"Instead of adding each construction parameters (generics) to ``UartCtrl`` "
"one by one, we can group them inside a class that will be used as single "
"parameter of ``UartCtrl``."
msgstr ""
"同时，不需要将每个构造参数（泛型）一一添加到 ``UartCtrl`` "
"中，我们可以将它们分组到一个类中，该类将用作 ``UartCtrl`` 的单个参数。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:84
msgid "UART interface"
msgstr "UART接口"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:86
msgid "Let's define a UART interface bundle without flow control."
msgstr "让我们定义一个没有流量控制的UART接口线束。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:95
msgid "UART configuration enums"
msgstr "UART配置枚举"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:97
msgid "Let's define parity and stop bit enumerations."
msgstr "让我们定义奇偶校验和停止位枚举。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:105
msgid "UartCtrl configuration Bundles"
msgstr "UartCtrl配置线束"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:107
msgid ""
"Let's define bundles that will be used as IO elements to setup ``UartCtrl``."
msgstr "让我们定义一些线束，它们将被用于设置 ``UartCtrl`` 的IO单元。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:115
msgid "Implementation"
msgstr "实现"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:117
msgid "In ``UartCtrl``\\ , 3 things will be instantiated:"
msgstr "在 ``UartCtrl`` 中会实例化3个东西 ："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:120
msgid ""
"One clock divider that generates a tick pulse at the UART RX sampling rate."
msgstr "一个时钟分频器，以UART RX采样率产生采样脉冲。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:121
msgid "One ``UartCtrlTx`` component"
msgstr "一个 ``UartCtrlTx`` 组件"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:122
msgid "One ``UartCtrlRx`` component"
msgstr "一个 ``UartCtrlRx`` 组件"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:125
msgid "UartCtrlTx"
msgstr "UARTCtrlTx"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:127
msgid "The interfaces of this ``Component`` are the following :"
msgstr "该 ``Component`` 的接口如下："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:136 ones/uart.rst:221
msgid "configFrame"
msgstr "configFrame"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:137 ones/uart.rst:222
msgid "UartCtrlFrameConfig"
msgstr "UartCtrlFrameConfig"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:138
msgid "Contains data bit width count and party/stop bits configurations"
msgstr "包含数据位宽计数和奇偶校验位/停止位配置"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:139 ones/uart.rst:224
msgid "samplingTick"
msgstr "samplingTick"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:140 ones/uart.rst:146
#: ones/uart.rst:225 ones/uart.rst:231
msgid "Bool"
msgstr "Bool"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:141 ones/uart.rst:226
msgid "Time reference that pulses ``rxSamplePerBit`` times per UART baud"
msgstr "以每UART波特 ``rxSamplePerBit`` 次脉冲为时间参考"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:144
msgid "Port used by the system to give transmission orders to the controller"
msgstr "系统向控制器发出传输命令的端口"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:145
msgid "txd"
msgstr "txd"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:147
msgid "UART txd pin"
msgstr "UART txd引脚"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:150 ones/uart.rst:235
msgid ""
"Let's define the enumeration that will be used to store the state of "
"``UartCtrlTx``\\ :"
msgstr "让我们定义用于存储 ``UartCtrlTx`` 状态的枚举："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:158
msgid "Let's define the skeleton of ``UartCtrlTx``\\ :"
msgstr "让我们定义 ``UartCtrlTx`` 的框架："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:202 ones/uart.rst:296
msgid "And here is the complete implementation:"
msgstr "完整实现如下："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:210
msgid "UartCtrlRx"
msgstr "UartCtrlRx"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:212
msgid "The interfaces of this ``Component`` are the following:"
msgstr "该 ``Component`` 的接口如下："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:223
msgid "Contains data bit width and party/stop bits configurations"
msgstr "包含数据位宽和奇偶校验/停止位配置"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:230
msgid "rxd"
msgstr "rxd"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:232
msgid "UART rxd pin, not synchronized with the current clock domain"
msgstr "UART rxd 引脚，与当前时钟域不同步"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:244
msgid "Let's define the skeleton of the UartCtrlRx :"
msgstr "让我们定义 UartCtrlRx 的框架："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:304
msgid "UartCtrl"
msgstr "UartCtrl"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:306
msgid ""
"Let's write ``UartCtrl`` that instantiates the ``UartCtrlRx`` and "
"``UartCtrlTx`` parts, generate the clock divider logic, and connect them to "
"each other."
msgstr ""
"让我们编写 ``UartCtrl`` 来实例化 ``UartCtrlRx`` 和 ``UartCtrlTx`` "
"部分，生成时钟分频器逻辑，并将它们相互连接。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:313
msgid ""
"To make it easier to use the UART with fixed settings, we introduce an "
"companion object for ``UartCtrl``. It allows us to provide additional ways "
"of instantiating a UartCtrl component with different sets of parameters. "
"Here we define a ``UartCtrlInitConfig`` holding the settings for a component"
" that is not runtime configurable. Note that it is still possible to "
"instantiate the UartCtrl manually like all other components, which one would"
" do if a runtime-configurable UART is needed (via ``val uart = new "
"UartCtrl()``)."
msgstr ""
"为了更简单地使用具有固定设置的 UART，我们引入了 ``UartCtrl`` 的伴生对象。这使"
"我们能够以不同的参数集实例化UartCtrl组件，提供了额外的实例化方式。"
"这里我们定义了 ``UartCtrlInitConfig`` ，用它保存那些无法在运行时配置的组件的"
"设置。请注意，如果需要一个能在运行时进行配置的UART，您仍然可以像所有其他组件"
"一样（通过 ``val uart = new UartCtrl()`` ）手动实例化UartCtrl。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:325
msgid "Simple usage"
msgstr "简单应用"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:327
msgid "To synthesize a ``UartCtrl`` as ``115200-N-8-1``:"
msgstr "用 ``115200-N-8-1`` 的参数综合 ``UartCtrl`` ："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:334
msgid "If you are using ``txd`` pin only, add:"
msgstr "如果您仅使用 ``txd`` 引脚，请添加："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:341
msgid "On the contrary, if you are using ``rxd`` pin only:"
msgstr "相反，如果您仅使用 ``rxd`` 引脚："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:349
msgid "Example with test bench"
msgstr "带TestBench的例子"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:351
msgid "Here is a top level example that does the followings things:"
msgstr "下面是一个顶层的示例，它执行以下操作："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:354
msgid ""
"Instantiate ``UartCtrl`` and set its configuration to 921600 baud/s, no "
"parity, 1 stop bit."
msgstr "实例化 ``UartCtrl`` 并将其配置设置为 921600 baud/s，无奇偶校验，1 个停止位。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:355
msgid ""
"Each time a byte is received from the UART, it writes it on the leds output."
msgstr "每次从 UART 接收到一个字节时，它都会将其写到 LED 输出上。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:356
msgid "Every 2000 cycles, it sends the switches input value to the UART."
msgstr "把switches输入值以每2000个周期发送到 UART。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:363
msgid ""
"`Here "
"<https://github.com/SpinalHDL/SpinalHDL/blob/master/tester/src/test/resources/UartCtrlUsageExample_tb.vhd>`_"
" you can get a simple VHDL testbench for this small "
"``UartCtrlUsageExample``."
msgstr ""
"您可以在 `这里 <https://github.com/SpinalHDL/SpinalHDL/blob/master/tester/"
"src/test/resources/UartCtrlUsageExample_tb.vhd>`_ 为这个小 "
"``UartCtrlUsageExample`` 获取一个简单的 VHDL 测试文件。"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:366
msgid "Bonus: Having fun with Stream"
msgstr "额外奖励：享受 Stream 带来的乐趣"

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:368
msgid "If you want to queue data received from the UART:"
msgstr "如果您想将从 UART 接收到的数据入队："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:375
msgid ""
"If you want to add a queue on the write interface and do some flow control:"
msgstr "如果要在写接口上添加一个队列并做一些流控制："

#: ../../SpinalHDL/Examples/Intermediates ones/uart.rst:382
msgid ""
"If you want to send a 0x55 header before sending the value of switches, you "
"can replace the write generator of the preceding example by:"
msgstr "如果您想在发送switches值之前发送 0x55 标头，可以将上例中的写生成器替换为："
