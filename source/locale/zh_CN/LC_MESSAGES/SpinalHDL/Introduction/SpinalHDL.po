msgid ""
msgstr ""
"Project-Id-Version: SpinalHDLReport-Msgid-Bugs-To:POT-Creation-Date:2023-12-"
"01 11:48+0800PO-Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME "
"<EMAIL@ADDRESS>Language:zh_CNLanguage-Team:zh_CN <LL@li.org>Plural-"
"Forms:nplurals=1; plural=0;MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESSPOT-Creation-Date:2023-12-02 00:23+0800PO-"
"Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME <EMAIL@ADDRESS"
">Language-Team:LANGUAGE <LL@li.org>MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"PO-Revision-Date: 2023-12-02 16:43+0000\n"
"Last-Translator: Readon <xydarcher@qq.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"spinaldoc-rtd/spinalhdlintroductionspinalhdl/zh_Hans/>\n"
"Language: zh_CN\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bitGenerated-By:Babel 2.13.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.3-dev\n"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:4
msgid "About SpinalHDL"
msgstr "关于 SpinalHDL"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:7
msgid "What is SpinalHDL?"
msgstr "什么是SpinalHDL？"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:9
msgid ""
"SpinalHDL is an open source high-level hardware description language with "
"associated tools. Its development started in December 2014."
msgstr "SpinalHDL 是一种开源高级硬件描述语言及其相关工具。它的开发始于 2014 年 12 "
"月。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:12
msgid ""
"SpinalHDL makes it possible to efficiently describe hardware, giving names "
"to digital hardware notions; the most obvious examples are ``Reg`` and "
"``Latch``. In event-driven languages such as VHDL and Verilog, to use these "
"two common elements, the user has to describe how to simulate them with a "
"process, so that the synthesis tool can infer what cell it is. With "
"SpinalHDL, you just have to declare a ``Reg`` or a ``Latch``."
msgstr ""
"SpinalHDL 通过对数字硬件命名和建模使得高效地描述硬件成为可能；最明显的例子是 "
"``Reg`` 和 ``Latch``。在VHDL和Verilog等事件驱动语言中，要使用这两个常见元素，"
"用户必须用过程来模拟它们，以便综合工具可以推断出它是什么单元。使用 "
"SpinalHDL，您只需声明一个 ``Reg`` 或 ``Latch``。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:19
msgid ""
"SpinalHDL is a *domain-specific language* based on Scala a general-purpose "
"language. It brings several benefits:"
msgstr "SpinalHDL 是一种基于通用语言 Scala 的 *领域专用语言* 。它带来了几个好处："

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:22
msgid ""
"There are free integrated development environments supporting it, providing "
"many features that simple text editors don't have:"
msgstr "有免费的集成开发环境支持它，提供了许多简单文本编辑器所没有的功能："

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:25
msgid "syntax and type errors are highlighted right in the code"
msgstr "语法和类型错误在代码中高亮显示"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:26
msgid "correct renaming, even across files"
msgstr "正确的重命名，甚至是跨文件的"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:27
msgid "smart auto completion / suggestions"
msgstr "智能自动完成/建议"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:28
msgid "navigation tools (go to definition, show all references, etc.)"
msgstr "导航工具（转到定义、显示所有引用等）"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:30
msgid ""
"It allows to implement simple to complex hardware generators (meta-hardware "
"description) with no need to deal with several languages."
msgstr "它允许实现简单到复杂的硬件生成器（元硬件描述），而无需处理多种语言（译者注："
"例如Python+Verilog）。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:35
msgid ""
"`Scala <https://scala-lang.org/>`_ is a statically-typed, functional and "
"object-oriented language using the Java virtual machine (JVM)."
msgstr ""
"`Scala <https://scala-lang.org/>`_ 是一种使用 Java 虚拟机 (JVM) "
"的静态类型、函数式和面向对象的语言。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:40
msgid "What SpinalHDL is not"
msgstr "SpinalHDL 不是什么"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:42
msgid ""
"SpinalHDL is not an HLS tool: its goal is not to automagically transform an "
"abstract algorithm into a digital circuit. Its goal is to create a new "
"abstraction level by naming things, to help the designer reuse their code "
"and not write the same thing over and over again."
msgstr ""
"SpinalHDL 不是 HLS 工具：它的目标不是自动将抽象算法转换为数字电路。它的目的是"
"借助命名事物来创建新的高层次抽象，以帮助设计人员重用他们的代码，而不是一遍又"
"一遍地编写相同的事物。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:47
msgid ""
"SpinalHDL is not an analog modeling language. VHDL and Verilog make it "
"possible for analog designers to provide a model of their IP to digital "
"designers. SpinalHDL does not address this case, and is for digital "
"designers to describe their own digital designs."
msgstr ""
"SpinalHDL 不是模拟电路建模语言。 VHDL 和 Verilog "
"使模拟电路设计人员能够向数字设计人员提供其 IP 模型。 SpinalHDL "
"不解决这种情况，而是供数字设计师描述他们自己的数字设计。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:54
msgid "The Spinal development flow"
msgstr "Spinal开发流程"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:56
msgid "Once code is written in *SpinalHDL*, the tool can:"
msgstr "一旦用 *SpinalHDL* 编写代码，该工具就可以："

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:58
msgid ""
"Generate VHDL, Verilog or SystemVerilog, to instantiate it in one of these "
"languages or give it to any simulator or synthesis tool. There is no logic "
"overhead, hierarchy and names are preserved, and it runs design checks "
"during generation."
msgstr ""
"生成 VHDL、Verilog 或 SystemVerilog，以这些语言之一实例化它或将其提供给任何仿"
"真器或综合工具。没有逻辑开销，保留层次结构和名称，并且在生成期间运行设计检查"
"。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:62
msgid "Boot a simulation using Verilator or another supported simulator."
msgstr "使用 Verilator 或其他支持的仿真器进行仿真。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:68
msgid ""
"As SpinalHDL is interoperable with VHDL and (System)Verilog, you can both "
"instantiate SpinalHDL IPs in these language (using generated code) and "
"instantiate IPs in these languages in SpinalHDL (using ``BlackBox``)."
msgstr ""
"由于 SpinalHDL 可以与 VHDL 和（System）Verilog 互操作，"
"因此您既可以用这些语言实例化 SpinalHDL IP（使用生成的代码），也可以用 "
"SpinalHDL 实例化这些语言的 IP（使用 ``BlackBox``）。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:74
msgid ""
"SpinalHDL is *fully interoperable* with standard VHDL/Verilog-based EDA "
"tools (simulators and synthesizers) as the output generated by the toolchain"
" can be VHDL or Verilog."
msgstr ""
"SpinalHDL 与基于标准 VHDL/Verilog 的 EDA "
"工具（仿真器和综合器）*完全可互操作*，因为工具链生成的输出是 VHDL 或 "
"Verilog。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:80
msgid "Advantages of using SpinalHDL over VHDL / Verilog"
msgstr "SpinalHDL 相对于 VHDL / Verilog 的优势"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:82
msgid ""
"As SpinalHDL is based on a high-level language, it provides several "
"advantages to improve your hardware coding:"
msgstr "由于 SpinalHDL 基于高级语言，因此它提供了多种优势来改进您的硬件编码："

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:84
msgid ""
"**No more endless wiring** - Create and connect complex buses like AXI in "
"one single line."
msgstr "**不再需要无休止的布线** - 一行代码完成复杂总线（例如 AXI）的创建和连接。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:85
msgid ""
"**Evolving capabilities** - Create your own bus definitions and abstraction "
"layers."
msgstr "**不断发展的功能** - 创建您自己的总线定义和抽象层。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:86
msgid ""
"**Reduce code size** - By a high factor, especially for wiring. This enables"
" you to have a better overview of your code base, increase your productivity"
" and create fewer headaches."
msgstr "**减少代码大小** - 大幅减少，特别是对于接线而言。这使您能够更好地了解代码库、"
"提高工作效率并减少麻烦。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:87
msgid ""
"**Free and user friendly IDE** - Thanks to Scala tools for auto-completion, "
"error highlighting, navigation shortcuts, and many others."
msgstr "**免费且用户友好的 IDE** - 得益于 Scala "
"工具的自动完成、错误突出显示、导航快捷方式等。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:88
msgid ""
"**Powerful and easy type conversions** - Bidirectional translation between "
"any data type and bits. Useful when loading a complex data structure from a "
"CPU interface."
msgstr "**功能强大且简单的类型转换** - 任何数据类型和位向量之间的双向转换。从 CPU "
"接口加载复杂的数据结构时非常有用。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:89
msgid ""
"**Design checks** - Early stage lints to check that there are eg no "
"combinatorial loops / latches."
msgstr "**设计检查** - 早期阶段检查是否存在组合循环/锁存器。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:90
msgid ""
"**Clock domain safety** - Early stage lints to inform you that there are "
"no unintentional clock domain crossings."
msgstr "**时钟域安全** - 早期 lint 通知是否存在无意识引入的违例跨时钟域信号。"

#: ../../SpinalHDL/Introduction/SpinalHDL.rst:91
msgid ""
"**Generic design** - There are no restrictions to the genericity of your "
"hardware description by using Scala constructs."
msgstr "**通用设计** - 使用 Scala 构造，因此对硬件描述的通用性没有任何限制。"
