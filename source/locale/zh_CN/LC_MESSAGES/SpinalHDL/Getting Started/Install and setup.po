msgid ""
msgstr ""
"Project-Id-Version: SpinalHDLReport-Msgid-Bugs-To:POT-Creation-Date:2023-12-"
"01 11:48+0800PO-Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME "
"<EMAIL@ADDRESS>Language:zh_CNLanguage-Team:zh_CN <LL@li.org>Plural-"
"Forms:nplurals=1; plural=0;MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESSPOT-Creation-Date:2023-12-02 00:23+0800PO-"
"Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME <EMAIL@ADDRESS"
">Language-Team:LANGUAGE <LL@li.org>MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"POT-Creation-Date: 2024-01-27 15:39+0000\n"
"PO-Revision-Date: 2024-01-28 14:12+0000\n"
"Last-Translator: Readon <xydarcher@qq.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"spinaldoc-rtd/spinalhdlgetting-startedinstall-and-setup/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.4-dev\n"
"Generated-By: Babel 2.14.0\n"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:4
msgid "Install and setup"
msgstr "安装和设置"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:6
msgid ""
"Spinal is a Scala library (a programming language using the Java VM) so "
"it requires setting up a Scala environment; there are many ways to do so."
" Also, it generates VHDL, Verilog or SystemVerilog, which can be used by "
"many different tools. This section describes the supported way to install"
" a *SpinalHDL description to Simulation* flow, but there can be many "
"variations."
msgstr ""
"Spinal是一个Scala库（使用Java VM的编程语言），因此需要设置Scala环境；有很多方法可以做到这一点。此外，它还生成 "
"VHDL、Verilog 或 SystemVerilog，可供许多不同的工具使用。本节介绍支持的 *SpinalHDL 描述到仿真* "
"流程的安装方法，但可能还有其他方法。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:13
msgid "Required/Recommended tools"
msgstr "必需/推荐的工具"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:15
msgid ""
"Before you download the SpinalHDL tools, you need to install a Scala "
"environment:"
msgstr "在下载 SpinalHDL 工具之前，您需要安装 Scala 环境："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:17
msgid ""
"`Java JDK <https://www.oracle.com/java/technologies/downloads/>`_, a Java"
" environment"
msgstr "`Java JDK <https://www.oracle.com/java/technologies/downloads/>`_，Java 环境"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:19
msgid "`Scala 2 <https://www.scala-lang.org/>`_, compiler and library"
msgstr "`Scala 2 <https://www.scala-lang.org/>`_，编译器和库"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:20
msgid "`SBT <https://www.scala-sbt.org/download/>`_, a Scala build tool"
msgstr "`SBT <https://www.scala-sbt.org/download/>`_ ，Scala 程序构建工具"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:22
msgid ""
"These tools enable to use Spinal; but without any other tools, it is "
"limited to HDL code generation."
msgstr "这些工具可以支持使用 Spinal生成代码；但在没有任何其他工具的情况下，它仅限于HDL代码生成。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:25
msgid "To enable more features we recommend:"
msgstr "要启用更多功能，我们建议："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:27
msgid ""
"An IDE (for instance the currently recommended `IntelliJ "
"<https://www.jetbrains.com/idea/>`_ with its Scala plugin or `VSCodium "
"<https://vscodium.com/>`_ with Metals extension) to get features such as:"
msgstr ""
"一个 IDE（例如当前推荐的带有 Scala 插件的 `IntelliJ <https://www.jetbrains.com/idea/>`_ "
"或带有 Metals 扩展的 `VSCodium <https://vscodium.com/>`_ ）可获得如下功能："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:31
msgid "Code suggestions / completion"
msgstr "代码建议/自动完成"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:32
msgid "Automatic build with syntax errors right in the code"
msgstr "自动构建，在代码中显示存在语法错误"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:33
msgid "Generate code with a single click"
msgstr "通过单击生成代码"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:34
msgid ""
"Run simulation / tests with a single click (if a supported simulator is "
"set up)"
msgstr "单击即可运行仿真/测试（如果设置了支持的仿真器）"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:37
msgid ""
"A supported simulator like `Verilator "
"<https://www.veripool.org/verilator/>`_ to test the design right from "
"SpinalHDL."
msgstr ""
"支持的仿真器，例如 `Verilator <https://www.veripool.org/verilator/>`_ ，可以直接从 "
"SpinalHDL 测试设计。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:39
msgid ""
"`Gtkwave <https://gtkwave.sourceforge.net/>`_ to view the waves generated"
" by Verilator during simulation."
msgstr "`Gtkwave <https://gtkwave.sourceforge.net/>`_ 查看 Verilator 在仿真过程中生成的波形。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:41
msgid "`Git <https://git-scm.com/>`_ for version control system"
msgstr "`Git <https://git-scm.com/>`_ 版本控制系统"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:42
msgid "A C++ toolchain, needed for simulating with Verilator"
msgstr "用 Verilator 进行仿真所需的 C++ 工具链"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:43
msgid "A linux shell, needed for simulating with Verilator"
msgstr "一个 linux shell，需要使用 Verilator 进行仿真"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:46
msgid "Linux Installation"
msgstr "Linux安装"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:48
msgid ""
"At time of writing the recommended way of installing Scala and SBT is via"
" `Coursier <https://get-coursier.io/docs/cli-installation>`_. Coursier is"
" able to in addition to the scala tools install a Java JDK to use, in the"
" example below we install Java from the package manager. We recommend to "
"install JDK 17 (LTS) because of compatibility with the used Scala "
"version."
msgstr ""
"在撰写本文时，推荐的 Scala 和 SBT 安装方法是通过 `Coursier <https://get-coursier.io/docs"
"/cli-installation>`_。除了 scala 工具之外，Coursier 还能够安装 Java JDK "
"，在下面的示例中，我们通过包管理器安装 Java。出于 Scala 版本兼容的考量，我们建议安装 JDK 17 (LTS)。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:53
msgid "For Debian or Ubuntu we run:"
msgstr "对于 Debian 或 Ubuntu，运行："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:65
msgid ""
"If you want to install the tools for simulation and/or formal proofs, we "
"recommend `oss-cad-suite <https://github.com/YosysHQ/oss-cad-suite-"
"build>`_. It contains a waveform viewer (gtkWave), verilog simulators "
"(verilator and iverilog), VHDL simulator (GHDL) and other tools. In case "
"you want to build the tools yourself have a look at the legacy simulation"
" tool :ref:`installation instructions <sim backend install>`."
msgstr ""
"如果您想安装用于仿真和/或形式化证明的工具，我们推荐 `oss-cad-suite <https://github.com/YosysHQ"
"/oss-cad-suite-"
"build>`_。它包含波形查看器（gtkWave）、verilog仿真器（verilator和iverilog）、VHDL仿真器（GHDL）以及一些其他工具。如果您想自己构建工具，请查看旧版仿真工具"
" :ref:`安装说明 <sim backend install>`。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:69
msgid ""
"We first install the needed C++ toolchain and download oss-cad-suite. To "
"use it we must load the oss-cad-suite environment for each shell we want "
"to use it in. Note that oss-cad-suite contains a Python 3 interpreter "
"that may interfere with the system Python installation if loaded "
"permanently."
msgstr ""
"首先，我们安装所需的C++工具链并下载oss-cad-suite。要使用它，我们必须为每个我们想要使用它的shell加载oss-cad-"
"suite环境。请注意，oss-cad-suite包含一个可能会干扰系统Python安装的Python 3解释器，如果永久加载（loaded "
"permanently）它。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:73
msgid ""
"Go to the oss-cad-suite `release page <https://github.com/YosysHQ/oss-"
"cad-suite-build/releases/latest>`_ to get the download link for the "
"latest version. You can download/extract oss-cad-suite to a folder of "
"your choice. (last tested version of oss-cad-suite is `2023-10-22`, but "
"more recent ones will most likely also work)"
msgstr ""
"前往 oss-cad-suite `发布页面 <https://github.com/YosysHQ/oss-cad-suite-"
"build/releases/latest>`_ 获取最新版本的下载链接。您可以将 oss-cad-suite 下载/解压到您选择的文件夹中。 "
"（oss-cad-suite 的最后测试版本是 `2023-10-22`，但最新的版本可能也可以工作）"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:83
msgid ""
"To use oss-cad-suite in a shell you need to load it's environment, e.g. "
"via ``souce <path to oss-cad-suite>/environment``."
msgstr ""
"要在 shell 中使用 oss-cad-suite，您需要加载它的环境，例如通过 ``souce <path to oss-cad-"
"suite>/environment`` 实现。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:87
msgid "Mac OS X Installation"
msgstr "Mac OS X 安装"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:88
msgid ""
"You can use homebrew to install on Mac OS X.  By default homebrew "
"installs Java 21, but the  SpinalHDL tutorial SpinalTemplateSbt uses "
"Scala version 2.12.16, which is not supported by Java 21 (17 is still the"
" recommended LTS version, https://whichjdk.com/). So to install Java "
"version 1.7 do:"
msgstr ""
"Mac OS X 上可以使用 homebrew 安装。默认情况下 homebrew 安装 Java 21，但 SpinalHDL 教程 "
"SpinalTemplateSbt 使用 Scala 版本 2.12.16，Java 21 不支持该版本（17 仍然是推荐的 LTS "
"版本，https://whichjdk.com/）。因此，要安装 Java 1.7 版本，请执行以下操作："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:96
msgid "And then add this to your path."
msgstr "然后，将其添加到您的路径（path）中。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:102
msgid ""
"To manage multiple versions of Java it is also essential to have jenv "
"installed."
msgstr "要管理 Java 的多个版本，还必须安装 jenv。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:108
msgid "Jenv added these lines to my .bash_profile"
msgstr "Jenv 将这些行添加到 .bash_profile 中"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:115
msgid "Next you have to install scala's interactive build tool sbt."
msgstr "接下来你必须安装scala的交互式构建工具sbt。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:121
msgid ""
"If this works for you, please let us know.  If this does not work for "
"you, you can read the github issue about Mac o SX installation here. "
"https://github.com/SpinalHDL/SpinalHDL/issues/1216"
msgstr ""
"如果这对您有用，请告诉我们。如果这对您不起作用，您可以在此处阅读有关 Mac o SX 安装的 github 问题。 "
"https://github.com/SpinalHDL/SpinalHDL/issues/1216"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:124
msgid ""
"If you want to install the tools for simulation and/or formal proofs, we "
"recommend `oss-cad-suite <https://github.com/YosysHQ/oss-cad-suite-"
"build>`_."
msgstr ""
"如果您想安装用于仿真和/或形式化证明的工具，我们推荐 `oss-cad-suite <https://github.com/YosysHQ"
"/oss-cad-suite-build>`_。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:127
msgid "Windows installation"
msgstr "Windows安装"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:130
msgid ""
"While a native installation is possible the simpler and currently "
"recommended way is to use WSL on Windows. If you want to use WSL, install"
" `it <https://learn.microsoft.com/en-us/windows/wsl/install>`_, a "
"distribution of your choice and follow the Linux installation "
"instructions. Data in your WSL instance can be accessed from windows "
"under ``\\\\wsl$``. In case you want to use IntelliJ you'll have to "
"download the Linux version to WSL, if you want to use VSCode then the "
"Windows version can be used to remotely edit in WSL."
msgstr ""
"虽然可以进行本机安装，但更简单且目前推荐的方法是在 Windows 上使用 WSL。如果您想使用 WSL，请安装您选择的 `发行版 "
"<https://learn.microsoft.com/en-us/windows/wsl/install>`_，并按照 Linux "
"安装说明进行操作。WSL 实例中的数据可以从Windows访问，在 ``\\\\wsl$`` 路径下。如果您想使用 IntelliJ，则必须将 "
"Linux 版本下载到 WSL，如果您想使用 VSCode，则可以使用 Windows 版本远程编辑WSL中的数据。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:136
msgid ""
"At time of writing the recommended way of installing Scala and SBT is via"
" `Coursier <https://get-coursier.io/docs/cli-installation>`_. Coursier is"
" able to in addition to the scala tools install a Java JDK to use, in the"
" example below we install Java manually. We recommend to install JDK 17 "
"(LTS) because of compatibility with Scala."
msgstr ""
"在撰写本文时，推荐的安装 Scala 和 SBT 方法是通过 `Coursier <https://get-coursier.io/docs"
"/cli-installation>`_。除了 scala 工具之外，Coursier 还能够安装 Java JDK "
"来使用，在下面的示例中我们手动安装 Java。由于 Scala 兼容性原因，我们建议安装 JDK 17 (LTS)。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:141
msgid ""
"First download and install `Adoptium JDK 17 "
"<https://adoptium.net/temurin/releases/?os=windows&version=17>`_. "
"Download, unzip and run the `Coursier installer "
"<https://github.com/coursier/launchers/raw/master/cs-x86_64-pc-"
"win32.zip>`_, when asked agree to an update of your ``PATH`` variable. "
"Reboot to force an update of ``PATH``."
msgstr ""
"首先，下载并安装 `Adoptium JDK 17 "
"<https://adoptium.net/temurin/releases/?os=windows&version=17>`_。下载、解压并运行"
" `Coursier 安装程序 "
"<https://github.com/coursier/launchers/raw/master/cs-x86_64-pc-"
"win32.zip>`_，当询问是否更新您的 ``PATH`` 变量时，选择同意。重新启动以强制更新 ``PATH``。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:145
msgid ""
"This is sufficient for generating hardware. For simulation continue with "
"either choice below. In case you want to build the tools yourself have a "
"look at the legacy simulation tool :ref:`installation instructions <sim "
"backend install>`."
msgstr ""
"这足以生成硬件。对于仿真，请继续选择以下任一选项。如果您想自己构建仿真工具，请查看旧版仿真工具 :ref:`安装说明 <sim backend "
"install>`。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:149
msgid ""
"An All-in-One solution offered by SpinalHDL maintainer `Readon "
"<https://github.com/Readon>` is available to install and run SpinalHDL "
"with Verilator simulation and formal verification via SymbiYosys. "
"Download `it <https://github.com/Readon/msys2-installer/releases>`_ and "
"install the environment anywhere on your disk. Start the build "
"environment by clicking on the MSYS2-MINGW64 icon in the Start menu and "
"use the MSYS2 default console. An alternative is to use the Windows "
"Terminal or a Tabby-like application and use the startup command "
"``%MSYS2_ROOT%\\msys2_shell.cmd -defterm -here -no-start -mingw64``, "
"where the ``%MSYS2_ROOT%`` is the location of the msys2 installation. It "
"is worth noting that if you want to use it offline, you should carefully "
"select the libraries that the project depends on, otherwise you will need"
" to download the packages manually. See the README for the repos for more"
" details."
msgstr ""
"SpinalHDL 维护者 `Readon <https://github.com/Readon>` 提供的一体化解决方案可用于安装和运行 "
"SpinalHDL，并通过 Verilator 仿真、通过 SymbiYosys 进行形式化验证。下载 `安装程序 "
"<https://github.com/Readon/msys2-installer/releases>`_ "
"并将该环境安装在磁盘上的任何位置。单击“开始”菜单中的 MSYS2-MINGW64 图标启动构建环境，并使用 MSYS2 "
"默认控制台。另一种方法是使用“Windows Terminal”或类似 Tabby 的应用程序，并使用启动命令 "
"``%MSYS2_ROOT%\\msys2_shell.cmd -defterm -here -no-start -mingw64``，其中 "
"``%MSYS2_ROOT%`` 是 msys2 "
"安装的位置。值得注意的是，如果要离线使用，要仔细选择项目所依赖的库，否则需要手动下载安装包。有关更多详细信息，请参阅对应仓库的自述文件。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:158
msgid "MSYS2 verilator for simulation"
msgstr "用于仿真的 MSYS2 verilator工具"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:160
msgid ""
"We recommend to install compiler/verilator through `MSYS2 "
"<https://www.msys2.org>`. Other methods of installing gcc/make/shell "
"(e.g. chocolatey, scoop, etc.) may also work but are untested."
msgstr ""
"我们建议通过 `MSYS2 <https://www.msys2.org>` 安装编译器/仿真器。其他安装 gcc/make/shell "
"的方法（例如 Chocolatey、scoop 等）也可能有效，但未经测试。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:163
msgid ""
"SpinalHDL maintainer `Readon <https://github.com/Readon>` is maintaining "
"a MSYS2 fork that default installs all needed officially available and "
"custom built packages (also maintained by Readon `here "
"<https://github.com/Readon/MINGW-SpinalHDL>`) for simulation and formal "
"verification. It can be found `here "
"<https://github.com/Readon/msys2-installer>`. If used then the packages "
"installed below via ``pacman`` are already installed and those "
"installation steps can be skipped."
msgstr ""
"SpinalHDL 维护者 `Readon <https://github.com/Readon>` 正在维护一个 MSYS2 "
"分支，默认安装所有需要的官方可用和自定义构建的软件包（也由 Readon 在 `此处 <https://github.com/Readon/ "
"MINGW-SpinalHDL>` 维护) 用于仿真和形式化验证。可以在 `此处 "
"<https://github.com/Readon/msys2-installer>` 找到。如果使用该安装包，则已经安装了下面通过 "
"pacman 安装的软件包，并且可以跳过这些安装步骤。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:169
msgid "Currently verilator 4.228 is latest available version known to work."
msgstr "目前 verilator 4.228 是已知可以工作的最新版本。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:171
msgid ""
"Download the latest installer and install MSYS2 with default settings. "
"You should get a MSYS2 terminal at the end of the installation, there "
"run:"
msgstr "下载最新的安装程序并使用默认设置安装 MSYS2。安装结束后你应该会得到一个 MSYS2 终端，运行："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:184
msgid ""
"In a MSYS2 MINGW64 terminal we need to set some environment variables to "
"make Java/sbt available (you can make these settings persistent by adding"
" them to ``~/.bashrc`` in MSYS2):"
msgstr ""
"在 MSYS2 MINGW64 终端中，我们需要设置一些环境变量以使 Java/sbt 可用（您可以通过将它们添加到 MSYS2 中的 "
"``~/.bashrc`` 来长期保存这些设置）："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:193
msgid ""
"With this you should be able to run sbt/verilator simulations from MSYS2 "
"terminals (sbt via calling ``sbt.bat``)."
msgstr "有了这个，您应该能够从 MSYS2 终端运行 sbt/verilator 仿真（通过调用 ``sbt.bat`` 使用）。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:196
msgid "MSYS2 for formal verification"
msgstr "用 MSYS2 实施形式化验证"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:198
msgid ""
"In addition to the steps above we also need to install yosys, sby, z3 and"
" yices. Both yosys(yosys-smtbmc workable) and sby are not available as "
"official MSYS2 packages, but packages are provided by `Readon "
"<https://github.com/Readon>`. If you used their installer then these "
"steps are not needed (you should check if there are newer packages "
"available)."
msgstr ""
"除了上面的步骤之外，我们还需要安装yosys、sby、z3和yices。 yosys(可用的yosys-smtbmc) 和 sby 并不使用 "
"MSYS2 官方提供的包（无法使用），而是由 `Readon <https://github.com/Readon>` "
"提供。如果您使用他们的安装程序，则不需要后面这些步骤（您应该检查是否有更新的软件包可用）。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:212
msgid "OCI Container"
msgstr "OCI容器"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:214
msgid ""
"A container for SpinalHDL development is available as well. The container"
" is hosted at ``ghcr.io/spinalhdl/docker:master`` and can be used with "
"Docker/Podman/Github Codespaces. It is used for the SpinalHDL CI "
"regression and can therefore be an easy way to run the CI commands "
"locally."
msgstr ""
"也可以使用 SpinalHDL 开发容器。该容器托管在 ``ghcr.io/spinalhdl/docker:master`` ，可以与 "
"Docker/Podman/Github Codespaces 一起使用。它用于 SpinalHDL CI "
"测试，因此，也可以成为本地运行的简单方法。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:218
msgid ""
"To run the container run e.g. ``podman run -v .:/workspace -it "
"ghcr.io/spinalhdl/docker:master`` in a SpinalHDL project root directory, "
"making the project directory available in ``/workspace``."
msgstr ""
"要使用容器，请运行例如SpinalHDL 项目根目录中的 ``podman run -v .:/workspace -it "
"ghcr.io/spinalhdl/docker:master`` ，使项目目录在 ``/workspace`` 中可用。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:221
msgid ""
"Please consult the documentation of you Distribution (Linux, WSL) or "
"Docker (Windows) on how to install the container runtime you want to use."
" Multiple editors/IDEs (e.g. VSCode, IntelliJ, Neovide) allow for remote "
"development in a container. Please consult the documentation of the "
"editor on how to do remote development."
msgstr ""
"请查阅您的发行版（Linux、WSL）或 Docker (Windows) "
"的文档，了解如何安装您想要使用容器的运行时依赖。多个编辑器/IDE（例如 "
"VSCode、IntelliJ、Neovide）允许对容器进行远程开发。如何进行远程开发请查阅相应编辑器的文档。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:226
msgid "Installing SBT in an internet-free Linux environment"
msgstr "在无网络的 Linux 环境中安装 SBT"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:229
msgid ""
"If you are not using an air-gapped environment we recommend to go with "
"the normal linux installation. (which is a subset of the installation for"
" an air-gapped environment)"
msgstr "如果您不使用无网环境，我们建议您使用正常的 Linux 安装。 （这里是无网环境安装的方法）"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:233
msgid ""
"Normally, SBT uses online repositories to download and cache your "
"projects dependencies. This cache is located in several folders:"
msgstr "通常，SBT 使用在线仓库来下载和缓存项目的依赖项。该缓存位于几个文件夹中："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:236
msgid "``~/.sbt``"
msgstr "``~/.sbt``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:237
msgid "``~/.cache/JNA``"
msgstr "``~/.cache/JNA``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:238
msgid "``~/.cache/coursier``"
msgstr "``~/.cache/coursier``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:240
msgid "To set up an internet-free environment, you can:"
msgstr "要设置无互联网环境，您可以："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:242
msgid "Set up an environment with internet (see above)"
msgstr "在有互联网的场景下配置环境（见上文）"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:243
msgid ""
"Launch a Spinal command (see :ref:`Using SBT`) to fetch dependencies (for"
" instance using the `getting started "
"<https://github.com/SpinalHDL/SpinalTemplateSbt>`_ repository)"
msgstr ""
"启动 Spinal 命令（请参阅 :ref:`Using SBT`）来获取依赖项（例如使用 `入门 "
"<https://github.com/SpinalHDL/SpinalTemplateSbt>`_ 仓库）"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:246
msgid "Copy the caches to the internet-free environment."
msgstr "将缓存复制到无互联网环境。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:251
msgid "Create a first SpinalHDL project"
msgstr "创建第一个 SpinalHDL 项目"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:253
msgid ""
"We have prepared a ready-to-go project for you the: `getting started "
"<https://github.com/SpinalHDL/SpinalTemplateSbt>`_ repository."
msgstr "我们为您准备了一个现成的项目：`入门 <https://github.com/SpinalHDL/SpinalTemplateSbt>`_ 仓库。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:255
msgid ""
"You can `download "
"<https://codeload.github.com/SpinalHDL/SpinalTemplateSbt/zip/master>`_ "
"it, or clone it."
msgstr ""
"您可以 `下载 "
"<https://codeload.github.com/SpinalHDL/SpinalTemplateSbt/zip/master>`_ "
"它，或克隆它。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:257
msgid ""
"The following commands clone the project into a new directory named "
"``MySpinalProject`` and initialize a fresh ``git`` history:"
msgstr "以下命令将项目克隆到名为 ``MySpinalProject`` 的新目录中，并初始化新的 ``git`` 历史记录："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:271
msgid "The directory structure of a project"
msgstr "项目的目录结构"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:275
msgid ""
"The structure described here is the default structure, but it can be "
"easily modified."
msgstr "这里描述的结构是默认结构，但可以轻松修改。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:278
msgid "In the root of the project are the following files:"
msgstr "项目的根目录中有以下文件："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:281
msgid "File"
msgstr "文件"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:281
msgid "Description"
msgstr "描述"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:283
msgid "``build.sbt``"
msgstr "``build.sbt``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:283
msgid "Scala configuration for ``sbt``"
msgstr "``sbt`` 的 Scala 配置"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:284
msgid "``build.sc``"
msgstr "``build.sc``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:284
msgid "Scala configuration for ``mill``, an alternative to ``sbt``"
msgstr "``mill`` 是一个 ``sbt`` 的替代品，它的配置方法是"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:285
msgid "``hw/``"
msgstr "``hw/``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:285
msgid "The folder containing hardware descriptions"
msgstr "包含硬件描述的文件夹"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:286
msgid "``project/``"
msgstr "``project/``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:286
msgid "More Scala configuration"
msgstr "更多 Scala 配置"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:287
msgid "``README.md``"
msgstr "``README.md``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:287
msgid "A ``text/markdown`` file describing your project"
msgstr "描述您的项目的 ``text/markdown`` 文件"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:288
msgid "``.gitignore``"
msgstr "``.gitignore``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:288
msgid "List of files to ignore in versioning"
msgstr "版本控制中要忽略的文件列表"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:289
msgid "``.mill-version``"
msgstr "``.mill-version``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:289
msgid "More configuration for ``mill``"
msgstr "``mill`` 的更多配置"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:290
msgid "``.scalafmt.conf``"
msgstr "``.scalafmt.conf``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:290
msgid "Configuration of rules to auto-format the code"
msgstr "配置自动格式化代码的规则"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:293
msgid ""
"As you probably guessed it, the interesting thing here is ``hw/``. It "
"contains four folders: ``spinal/``, ``verilog/`` and ``vhdl/`` for your "
"IPs and ``gen/`` for IPs generated with Spinal."
msgstr ""
"正如您可能猜到的，这里有趣的是 ``hw/``。它包含四个文件夹： ``spinal/``、 ``verilog/`` 和 ``vhdl/`` "
"保存您的 IP， ``gen/`` 保存 Spinal 生成的 IP。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:297
msgid ""
"``hw/spinal/`` contains a folder named after your project name. This name"
" must be set in ``build.sbt`` (along with the company name) and in "
"``build.sc``; and it must be the one in ``package yourprojectname`` at "
"the beginning of ``.scala`` files."
msgstr ""
"``hw/spinal/`` 包含一个以您的项目名称命名的文件夹。该名称以及公司名称必须在 ``build.sbt`` 和 "
"``build.sc`` 中设置；并且这个名称必须在 ``.scala`` 文件开头以 ``package yourprojectname`` "
"的形式给出。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:302
msgid ""
"In ``hw/spinal/yourprojectname/``, are the descriptions of your IPs, "
"simulation tests, formal tests; and there is ``Config.scala``, which "
"contains the configuration of ``Spinal``."
msgstr ""
"在 ``hw/spinal/yourprojectname/`` 中，是你的IP描述，仿真测试，形式化验证测试；还有 "
"``Config.scala``，其中包含 ``Spinal``的配置。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:308
msgid ""
"``sbt`` must be used **only** at the root of the project, in the folder "
"containing ``build.sbt``."
msgstr "``sbt`` 必须且**仅**在项目的根目录中使用，该目录包含 ``build.sbt`` 文件。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:313
msgid "Using Spinal on SpinalHDL code"
msgstr "在 SpinalHDL 代码中使用 Spinal"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:315
msgid ""
"Now the tutorial shows how to use Spinal on SpinalHDL code depending on "
"your development environment:"
msgstr "现在，教程展示了如何根据您的开发环境在 SpinalHDL 代码中使用 Spinal："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:318
msgid ":ref:`Using SBT`"
msgstr ":ref:`Using SBT`"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:319
msgid ":ref:`Using VSCodium`"
msgstr ":ref:`Using VSCodium`"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:320
msgid ":ref:`Using IntelliJ`"
msgstr ":ref:`Using IntelliJ`"

#~ msgid "Mandatory requirements"
#~ msgstr "强制性要求"

#~ msgid "For instance, to install them on the Debian distribution:"
#~ msgstr "例如，要将它们安装在 Debian 发行版上："

#~ msgid ""
#~ "If you do not need this, you "
#~ "can skip to the next section: "
#~ ":ref:`recommended`."
#~ msgstr "如果您不需要这个，您可以跳到下一部分：:ref:`推荐`。"

#~ msgid ""
#~ "You can get a portable SBT setup"
#~ " here: https://www.scala-sbt.org/download.html"
#~ msgstr "您可以在此处获取便携式 SBT 设置：https://www.scala-sbt.org/download.html"

#~ msgid ""
#~ "You might be interested in `SpinalNomad"
#~ " <https://github.com/SpinalHDL/SpinalNomad/tree/main/sbt>`_."
#~ msgstr ""
#~ "您可能对“SpinalNomad "
#~ "<https://github.com/SpinalHDL/SpinalNomad/tree/main/sbt>”感兴趣。"

#~ msgid "Recommended requirements"
#~ msgstr "推荐要求"
