msgid ""
msgstr ""
"Project-Id-Version: SpinalHDLReport-Msgid-Bugs-To:POT-Creation-Date:2023-12-"
"02 00:23+0800PO-Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME "
"<EMAIL@ADDRESS>Language:zh_CNLanguage-Team:zh_CN <LL@li.org>Plural-"
"Forms:nplurals=1; plural=0;MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"PO-Revision-Date: 2024-01-12 04:06+0000\n"
"Last-Translator: tsy0123 <675526215@qq.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"spinaldoc-rtd/spinalhdllibrariesbustilelinktilelink_fabric/zh_Hans/>\n"
"Language: zh_CN\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bitGenerated-By:Babel 2.13.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.4-dev\n"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:3
msgid "tilelink.fabric.Node"
msgstr "tilelink.fabric.Node"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:5
msgid ""
"tilelink.fabric.Node is an additional layer over the regular tilelink "
"hardware instanciation which handle negociation and parameters propagation "
"at a SoC level."
msgstr "tilelink.fabric."
"Node是常规tilelink硬件实例之上的附加层，用于处理SoC级别的协调和参数传递。"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:7
msgid ""
"It is mostly based on the Fiber API, which allows to create elaboration time"
" fibers (user-space threads), allowing to schedule future parameter "
"propagation / negociation and hardware elaboration."
msgstr "它主要基于Fiber API，它允许创建精化时间纤程（用户空间线程），从而允许确定未来"
"的参数传递/协调和硬件生成。"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:9
msgid "A Node can be created in 3 ways :"
msgstr "可以通过3种方式创建节点(Node)："

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:11
msgid ""
"tilelink.fabric.Node.down() : To create a node which can connect downward "
"(toward slaves), so it would be used in a CPU / DMA / bridges agents"
msgstr "tilelink.fabric.Node."
"down()：创建一个可以向下连接（向从端）的节点，因此它将用于CPU/DMA/桥的代理"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:12
msgid "tilelink.fabric.Node() : To create an intermediate nodes"
msgstr "tilelink.fabric.Node()：创建中间节点"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:13
msgid ""
"tilelink.fabric.Node.up() : To create a node which can connect upward "
"(toward masters), so it would be used in peripherals / memories / bridges "
"agents"
msgstr "tilelink.fabric.Node."
"up()：创建一个可以向上连接（向主端）的节点，因此它将用于外设/存储器/桥的代理"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:15
msgid "Nodes mostly have the following attributes :"
msgstr "节点大多具有以下属性："

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:17
msgid "bus : Handle[tilelink.Bus]; the hardware instance of the bus"
msgstr "bus : Handle[tilelink.Bus]；总线的硬件实例"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:18
msgid ""
"m2s.proposed : Handle[tilelink.M2sSupport]; The set of features which is "
"proposed by the upward connections"
msgstr "m2s.proposed : Handle[tilelink.M2sSupport]；由向上连接提出的功能集"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:19
msgid ""
"m2s.supported : Handle[tilelink.M2sSupport] : The set of feature supported "
"by the downward connections"
msgstr "m2s.supported : Handle[tilelink.M2sSupport]: 向下连接支持的功能集"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:20
msgid ""
"m2s.parameter : Handle[tilelink.M2sParameter] : The final bus parameter"
msgstr "m2s.parameter : Handle[tilelink.M2sParameter]: 最终的总线参数"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:22
msgid ""
"You can note that they all are Handles. Handle is a way in SpinalHDL to have"
" share a value between fibers. If a fiber read a Handle while this one has "
"no value yet, it will block the execution of that fiber until another fiber "
"provide a value to the Handle."
msgstr ""
"您可以注意到它们都是句柄。Handle是SpinalHDL中在纤程之间共享值的一种方式。如果"
"一个纤程读取一个句柄，而这个句柄还没有值，它将阻止该纤程的执行，直到另一个纤"
"程向该句柄提供一个值。"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:24
msgid ""
"There is also a set of attribues like m2s, but reversed (named s2m) which "
"specify the parameters for the transactions initiated by the slave side of "
"the interconnect (ex memory coherency)."
msgstr "还有一组属性，类似于m2s，但是反向的（名为s2m），它们指定了由互连的从端发起的"
"事务的参数（例如内存一致性）。"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:26
msgid ""
"There is two talks which where introducing the tilelink.fabric.Node. Those "
"talk may not exactly follow the actual syntax, they are still follow the "
"concepts :"
msgstr "有两个演讲介绍了tilelink.fabric."
"Node。这两个演讲可能并不完全遵循实际语法，它们仍然遵循以下概念："

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:28
msgid "Introduction : https://youtu.be/hVi9xOGuuek"
msgstr "介绍：https://youtu.be/hVi9xOGuuek"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:29
msgid ""
"In depth : "
"https://peertube.f-si.org/videos/watch/bcf49c84-d21d-4571-a73e-96d7eb89e907"
msgstr ""
"深入：https://peertube.f-si.org/videos/watch/bcf49c84-d21d-4571-a73e-"
"96d7eb89e907"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:32
msgid "Example Toplevel"
msgstr "顶层示例"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:34
msgid "Here is an example of a simple fictive SoC toplevel :"
msgstr "以下是一个简单的虚拟SoC顶层设计示例："

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:46
msgid ""
"You can also define intermediate nodes in the interconnect as following :"
msgstr "您还可以定义互连中的中间节点，如下所示："

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:70
msgid "Example GpioFiber"
msgstr "GPIOFiber示例"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:72
msgid ""
"GpioFiber is a simple tilelink peripheral which can read / drive a 32 bits "
"tristate array."
msgstr "GpioFiber是一个简单的tilelink外设，可以读取/驱动32位三态阵列。"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:116
msgid "Example RamFiber"
msgstr "RamFiber示例"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:118
msgid "RamFiber is the integration layer of a regular tilelink Ram component."
msgstr "RamFiber是常规tilelink Ram组件的集成层。"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:146
msgid "Example CpuFiber"
msgstr "CpuFiber示例"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:148
msgid "CpuFiber is an fictive example of a master integration."
msgstr "CpuFiber是一个虚拟的主端集成的示例。"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:195
msgid ""
"One particularity of Tilelink, is that it assumes a master will not emit "
"requests to a unmapped memory space. To allow a master to identify what "
"memory access it is allowed to do, you can use the "
"spinal.lib.system.tag.MemoryConnection.getMemoryTransfers tool as following "
":"
msgstr ""
"Tilelink的一个特殊性是，它假设主端不会向未映射的内存空间发出请求。为了让主机"
"识别允许访问哪些内存，您可以使用spinal.lib.system.tag.MemoryConnection."
"getMemoryTransfers工具，如下所示："

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:206
msgid "If you run this in the Cpu's fiber, in the following soc :"
msgstr "如果您在CPU的纤程中运行此命令，在下面的soc中："

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:228
msgid "You will get :"
msgstr "你会得到 ："

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:236
msgid ""
"\"through=\" specify the chain of address transformations done to reach the "
"target."
msgstr "\"through=\" 指定了到达目标所需的地址转换链。"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:237
msgid "\"SM\" means SizeMapping(address, size)"
msgstr "\"SM\" 表示SizeMapping(address, size)"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:238
msgid "\"OT\" means OffsetTransformer(offset)"
msgstr "\"OT\" 表示OffsetTransformer(offset)"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:240
msgid ""
"Note that you can also add PMA (Physical Memory Attributes) to nodes and "
"retreives them via this getMemoryTransfers utilities."
msgstr "请注意，您还可以将PMA（物理内存属性）添加到节点，并通过此getMemoryTransfers工"
"具检索它们。"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:242
msgid "The currently defined PMA are :"
msgstr "当前PMA的定义是："

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:258
msgid "The getMemoryTransfers utility rely on a dedicated SpinalTag :"
msgstr "getMemoryTransfers工具依赖于专用的SpinalTag："

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:270
msgid ""
"That SpinalTag can be used applied to both ends of a given memory bus "
"connection to keep this connection discoverable at elaboration time, "
"creating a graph of MemoryConnection. One good thing about it is that is is "
"bus agnostic, meaning it isn't tilelink specific."
msgstr ""
"该SpinalTag可以应用于给定内存总线连接的两端，以保持该连接在生成时可被发现，从"
"而创建内存连接(MemoryConnection)图。它的一个优点是它与总线无关，这意味着它不"
"是tilelink特有的。"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:274
msgid "Example WidthAdapter"
msgstr "位宽适配器(WidthAdapter)示例"

#: ../../SpinalHDL/Libraries/Bus/tilelink/tilelink_fabric.rst:276
msgid "The width adapter is a simple example of bridge."
msgstr "位宽适配器是桥的一个简单例子。"
