msgid ""
msgstr ""
"Project-Id-Version: SpinalHDLReport-Msgid-Bugs-To:POT-Creation-Date:2023-12-"
"01 11:48+0800PO-Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME "
"<EMAIL@ADDRESS>Language:zh_CNLanguage-Team:zh_CN <LL@li.org>Plural-"
"Forms:nplurals=1; plural=0;MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESSPOT-Creation-Date:2023-12-02 00:23+0800PO-"
"Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME <EMAIL@ADDRESS"
">Language-Team:LANGUAGE <LL@li.org>MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"PO-Revision-Date: 2024-01-10 17:06+0000\n"
"Last-Translator: tsy0123 <675526215@qq.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"spinaldoc-rtd/spinalhdllibrariesbus_slave_factory/zh_Hans/>\n"
"Language: zh_CN\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bitGenerated-By:Babel 2.13.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.4-dev\n"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:7
msgid "Bus Slave Factory"
msgstr "总线从端生成器"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:10
msgid "Introduction"
msgstr "简介"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:12
msgid ""
"In many situation it's needed to implement a bus register bank. The "
"``BusSlaveFactory`` is a tool that provide an abstract and smooth way to "
"define them."
msgstr "在许多情况下，需要实现总线寄存器组， ``BusSlaveFactory`` "
"是一个提供了一种抽象且流畅的方式来定义它们的工具。"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:14
msgid ""
"To see capabilities of the tool, an simple example use the Apb3SlaveFactory "
"variation to implement an :ref:`memory mapped UART <memory_mapped_uart>`. "
"There is also another example with an :ref:`Timer <timer>` which contain a "
"memory mapping function."
msgstr ""
"要了解该工具的功能，可以通过一个简单的使用Apb3SlaveFactory变体来实现 :ref:`"
"内存映射UART <memory_mapped_uart>` 的示例。还有另一个 :ref:`计时器 <timer>` "
"的示例，其中包含内存映射函数。"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:16
msgid ""
"You can find more documentation about the internal implementation of the "
"``BusSlaveFactory`` tool :ref:`there <bus_slave_factory_implementation>`"
msgstr ""
"您可以在 :ref:`这里 <bus_slave_factory_implementation>` 找到有关 "
"``BusSlaveFactory`` 工具内部实现的更多文档"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:19
msgid "Functionality"
msgstr "功能"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:21
msgid ""
"There are many implementations of the ``BusSlaveFactory`` tool : AHB3-lite, "
"APB3, APB4, AvalonMM, AXI-lite 3, AXI4, BMB, Wishbone and "
"PipelinedMemoryBus."
msgstr ""
"有许多 ``BusSlaveFactory`` 工具的实现：AHB3-lite、APB3、APB4、AvalonMM、AXI-"
"lite 3、AXI4、BMB、Wishbone 和 PipelinedMemoryBus。"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:22
msgid ""
"Each implementation of that tool take as an argument one instance of the "
"corresponding bus and then offers the following functions to map your "
"hardware into the memory mapping :"
msgstr "该工具的每个实现都接受相应总线的一个实例作为参数，然后提供以下函数，用于将您"
"的硬件映射到内存映射："

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:28
msgid "Name"
msgstr "名称"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:29
msgid "Return"
msgstr "返回类型"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:30
msgid "Description"
msgstr "描述"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:31
msgid "busDataWidth"
msgstr "busDataWidth"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:32
msgid "Int"
msgstr "Int"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:33
msgid "Return the data width of the bus"
msgstr "返回总线的数据宽度"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:34
msgid "read(that,address,bitOffset)"
msgstr "read(that,address,bitOffset)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:36
msgid ""
"When the bus read the ``address``\\ , fill the response with ``that`` at "
"``bitOffset``"
msgstr "当通过总线读取地址 ``address`` 时，用 ``that`` 中 ``bitOffset`` "
"位置的数据填充响应"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:37
msgid "write(that,address,bitOffset)"
msgstr "write(that,address,bitOffset)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:39
msgid ""
"When the bus write the ``address``\\ , assign ``that`` with bus's data from "
"``bitOffset``"
msgstr "当通过总线写入地址 ``address`` 时，将总线上 ``bitOffset`` 位置的数据赋值 "
"``that``"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:40
msgid "onWrite(address)(doThat)"
msgstr "onWrite(address)(doThat)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:42
msgid "Call ``doThat`` when a write transaction occur on ``address``"
msgstr "当 ``address`` 地址上发生写操作（出现写事务）时调用 ``doThat``"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:43
msgid "onRead(address)(doThat)"
msgstr "onRead(address)(doThat)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:45
msgid "Call ``doThat`` when a read transaction occur on ``address``"
msgstr "当 ``address`` 上发生读操作（出现读事务）时调用 ``doThat``"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:46
msgid "nonStopWrite(that,bitOffset)"
msgstr "nonStopWrite(that,bitOffset)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:48
msgid "Permanently assign ``that`` by the bus write data from ``bitOffset``"
msgstr "将通过总线写入的 ``bitOffset`` 的数据赋值到 ``that``"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:49
msgid "readAndWrite(that,address,bitOffset)"
msgstr "readAndWrite(that,address,bitOffset)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:51
msgid ""
"Make ``that`` readable and writable at ``address`` and placed at "
"``bitOffset`` in the word"
msgstr "使 ``that`` 信号可通过 ``address`` 地址读写，并且该信号放置在数据的 "
"``bitOffset`` 位置"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:52
msgid "readMultiWord(that,address)"
msgstr "readMultiWord(that,address)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid "Create the memory mapping to read ``that`` from 'address'."
msgstr "创建内存映射以从 'address' 读取 ``that`` 。"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid ""
"If ``that`` is bigger than one word it extends the register on followings "
"addresses"
msgstr "如果 ``that`` 的位宽大于一个字（32位），它将在以下地址上扩展寄存器"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:56
msgid "writeMultiWord(that,address)"
msgstr "writeMultiWord(that,address)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid "Create the memory mapping to write ``that`` at 'address'."
msgstr "创建内存映射以在 'address' 处写入 ``that`` 。"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:60
msgid "createWriteOnly(dataType,address,bitOffset)"
msgstr "createWriteOnly(dataType,address,bitOffset)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:61
#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:64
msgid "T"
msgstr "T"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:62
msgid ""
"Create a write only register of type ``dataType`` at ``address`` and placed "
"at ``bitOffset`` in the word"
msgstr "在 ``address`` 地址处创建一个 ``dataType`` 类型的只写寄存器，"
"并将其放置在字中的 ``bitOffset`` 位置"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:63
msgid "createReadWrite(dataType,address,bitOffset)"
msgstr "createReadWrite(dataType,address,bitOffset)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:65
msgid ""
"Create a read write register of type ``dataType`` at ``address`` and placed "
"at ``bitOffset`` in the word"
msgstr "在 ``address`` 处创建一个 ``dataType`` 类型的读写寄存器，并将其放置在字中的 "
"``bitOffset`` 位置"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:66
msgid "createAndDriveFlow(dataType,address,bitOffset)"
msgstr "createAndDriveFlow(dataType,address,bitOffset)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:67
msgid "Flow[T]"
msgstr "Flow[T]"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:68
msgid ""
"Create a writable Flow register of type ``dataType`` at ``address`` and "
"placed at ``bitOffset`` in the word"
msgstr ""
"在 ``address`` 地址处创建一个 ``dataType`` 类型的可写流（Flow）寄存器，"
"并将其放置在字中的 ``bitOffset`` 位置"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:69
msgid "drive(that,address,bitOffset)"
msgstr "drive(that,address,bitOffset)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:71
msgid ""
"Drive ``that`` with a register writable at ``address`` placed at "
"``bitOffset`` in the word"
msgstr "使用位于 ``address`` 地址的可写寄存器中 ``bitOffset`` 位置的信号驱动 ``that``"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:72
msgid "driveAndRead(that,address,bitOffset)"
msgstr "driveAndRead(that,address,bitOffset)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:74
msgid ""
"Drive ``that`` with a register writable and readable at ``address`` placed "
"at ``bitOffset`` in the word"
msgstr "使用位于 ``address`` 地址的可读写寄存器中 ``bitOffset`` 位置的信号驱动 "
"``that``"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:75
msgid "driveFlow(that,address,bitOffset)"
msgstr "driveFlow(that,address,bitOffset)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst:77
msgid ""
"Emit on ``that`` a transaction when a write happen at ``address`` by using "
"data placed at ``bitOffset`` in the word"
msgstr "当对 ``address`` 地址写入时，通过使用位于 ``bitOffset`` 位的数据，在 ``that``"
" 流（Flow）上发出事务"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid "readStreamNonBlocking(that,"
msgstr "readStreamNonBlocking(that,"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid "address,"
msgstr "address,"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid "validBitOffset,"
msgstr "validBitOffset,"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid "payloadBitOffset)"
msgstr "payloadBitOffset)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid ""
"Read ``that`` and consume the transaction when a read happen at ``address``."
msgstr "读取 ``that`` 信号并在读取 ``address`` 地址时消耗事务。"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid "valid <= validBitOffset bit"
msgstr "valid <= validBitOffset bit"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid ""
"payload <= payloadBitOffset+widthOf(payload) downto ``payloadBitOffset``"
msgstr ""
"payload <= payloadBitOffset+widthOf(payload) downto ``payloadBitOffset``"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid "doBitsAccumulationAndClearOnRead(that,"
msgstr "doBitsAccumulationAndClearOnRead(that,"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid "bitOffset)"
msgstr "bitOffset)"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid "Instantiate an internal register which at each cycle do :"
msgstr "实例化一个内部寄存器，该寄存器在每个周期执行以下操作："

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid "reg := reg | that"
msgstr "reg := reg | that"

#: ../../SpinalHDL/Libraries/bus_slave_factory.rst
msgid ""
"Then when a read occur, the register is cleared. This register is readable "
"at ``address`` and placed at ``bitOffset`` in the word"
msgstr "然后，当发生读取时，寄存器被清除。该寄存器可通过 ``address`` 地址读取，"
"并放置在字中的 ``bitOffset`` 位置"
