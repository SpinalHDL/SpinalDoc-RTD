msgid ""
msgstr ""
"Project-Id-Version: SpinalHDLReport-Msgid-Bugs-To:POT-Creation-Date:2023-12-"
"01 11:48+0800PO-Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME "
"<EMAIL@ADDRESS>Language:zh_CNLanguage-Team:zh_CN <LL@li.org>Plural-"
"Forms:nplurals=1; plural=0;MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESSPOT-Creation-Date:2023-12-02 00:23+0800PO-"
"Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME <EMAIL@ADDRESS"
">Language-Team:LANGUAGE <LL@li.org>MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"PO-Revision-Date: 2023-12-14 06:03+0000\n"
"Last-Translator: Readon <xydarcher@qq.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"spinaldoc-rtd/spinalhdldata-typesbundle/zh_Hans/>\n"
"Language: zh_CN\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bitGenerated-By:Babel 2.13.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.3-rc\n"

#: ../../SpinalHDL/Data types/bundle.rst:5
msgid "Bundle"
msgstr "Bundle"

#: ../../SpinalHDL/Data types/bundle.rst:8 types/bundle.rst:64
#: types/bundle.rst:97 types/bundle.rst:121
msgid "Description"
msgstr "描述"

#: ../../SpinalHDL/Data types/bundle.rst:10
msgid ""
"The ``Bundle`` is a composite type that defines a group of named signals (of"
" any SpinalHDL basic type) under a single name."
msgstr "``Bundle`` 是一种复合类型，它在单个名称下定义一组具有命名的信号（任何 "
"SpinalHDL 基本类型）。"

#: ../../SpinalHDL/Data types/bundle.rst:12
msgid ""
"A ``Bundle`` can be used to model data structures, buses, and interfaces."
msgstr "``Bundle`` 可用于对数据结构、总线和接口进行建模。"

#: ../../SpinalHDL/Data types/bundle.rst:15
msgid "Declaration"
msgstr "声明"

#: ../../SpinalHDL/Data types/bundle.rst:17
msgid "The syntax to declare a bundle is as follows:"
msgstr "声明线束的语法如下："

#: ../../SpinalHDL/Data types/bundle.rst:27
msgid "For example, a bundle holding a color could be defined as:"
msgstr "例如，包含颜色的线束可以定义为："

#: ../../SpinalHDL/Data types/bundle.rst:35
msgid ""
"You can find an :ref:`APB3 definition <example_apb3>` among the :ref:`Spinal"
" HDL examples <example_list>`."
msgstr ""
"您可以在 :ref:`Spinal HDL examples <example_list>` 中找到 :ref:`APB3 "
"definition <example_apb3>` 。"

#: ../../SpinalHDL/Data types/bundle.rst:38
msgid "Conditional signals"
msgstr "条件信号"

#: ../../SpinalHDL/Data types/bundle.rst:39
msgid ""
"The signals in the ``Bundle`` can be defined conditionally. Unless "
"``dataWidth`` is greater than 0, there will be no ``data`` signal in "
"elaborated ``myBundle``, as demonstrated in the example below."
msgstr ""
"``Bundle`` 中的信号可以有条件地定义。除非 ``dataWidth`` 大于 0，"
"否则在实力细化后的 ``myBundle``中将不会有 ``data`` 信号，如下例所示。"

#: ../../SpinalHDL/Data types/bundle.rst:50
msgid ""
"See also :ref:`generate <generate>` for information about this SpinalHDL "
"method."
msgstr "另请参阅 :ref:`generate <generate>` 了解有关此 SpinalHDL 方法的信息。"

#: ../../SpinalHDL/Data types/bundle.rst:53
msgid "Operators"
msgstr "运算符"

#: ../../SpinalHDL/Data types/bundle.rst:55
msgid "The following operators are available for the ``Bundle`` type:"
msgstr "以下运算符可用于 ``Bundle`` 类型："

#: ../../SpinalHDL/Data types/bundle.rst:58
msgid "Comparison"
msgstr "比较运算"

#: ../../SpinalHDL/Data types/bundle.rst:63 types/bundle.rst:96
#: types/bundle.rst:120
msgid "Operator"
msgstr "运算符"

#: ../../SpinalHDL/Data types/bundle.rst:65
msgid "Return type"
msgstr "返回类型"

#: ../../SpinalHDL/Data types/bundle.rst:66
msgid "x === y"
msgstr "x === y"

#: ../../SpinalHDL/Data types/bundle.rst:67
msgid "Equality"
msgstr "等价性判断"

#: ../../SpinalHDL/Data types/bundle.rst:68 types/bundle.rst:71
msgid "Bool"
msgstr "Bool"

#: ../../SpinalHDL/Data types/bundle.rst:69
msgid "x =/= y"
msgstr "x =/= y"

#: ../../SpinalHDL/Data types/bundle.rst:70
msgid "Inequality"
msgstr "不等价判断运算"

#: ../../SpinalHDL/Data types/bundle.rst:91
msgid "Type cast"
msgstr "类型转换"

#: ../../SpinalHDL/Data types/bundle.rst:98 types/bundle.rst:122
msgid "Return"
msgstr "返回类型"

#: ../../SpinalHDL/Data types/bundle.rst:99
msgid "x.asBits"
msgstr "x.asBits"

#: ../../SpinalHDL/Data types/bundle.rst:100
msgid "Binary cast to Bits"
msgstr "二进制转换为 Bits"

#: ../../SpinalHDL/Data types/bundle.rst:101
msgid "Bits(w(x) bits)"
msgstr "Bits(w(x) bits)"

#: ../../SpinalHDL/Data types/bundle.rst:108
msgid ""
"The elements of the bundle will be mapped into place in the order in which "
"they are defined, LSB first. Thus, ``r`` in ``color1`` will occupy bits 0 to"
" 8 of ``myBits`` (LSB), followed by ``g`` and ``b`` in that order, with "
"``b.msb`` also being the MSB of the resulting Bits type."
msgstr ""
"线束中的元素将按其定义的顺序映射到位，按LSB 先放置的顺序。因此，``color1`` "
"中的 ``r`` 将占据 ``myBits`` 的第 0 至 8 位（LSB），然后依次是 ``g`` 和 ``b``"
" ，``b.msb`` 也是最终 Bits 类型的 MSB。"

#: ../../SpinalHDL/Data types/bundle.rst:113
msgid "Convert Bits back to Bundle"
msgstr "将位转换回线束"

#: ../../SpinalHDL/Data types/bundle.rst:114
msgid ""
"The ``.assignFromBits`` operator can be viewed as the reverse of "
"``.asBits``."
msgstr "``.assignFromBits`` 运算符可以被视为 ``.asBits`` 的逆操作。"

#: ../../SpinalHDL/Data types/bundle.rst:123
msgid "x.assignFromBits(y)"
msgstr "x.assignFromBits(y)"

#: ../../SpinalHDL/Data types/bundle.rst:124
msgid "Convert Bits (y) to Bundle(x)"
msgstr "将Bits (y)转换为Bundle(x)"

#: ../../SpinalHDL/Data types/bundle.rst:125 types/bundle.rst:128
msgid "Unit"
msgstr "Unit"

#: ../../SpinalHDL/Data types/bundle.rst:126
msgid "x.assignFromBits(y, hi, lo)"
msgstr "x.assignFromBits(y, hi, lo)"

#: ../../SpinalHDL/Data types/bundle.rst:127
msgid "Convert Bits (y) to Bundle(x) with high/low boundary"
msgstr "将Bits (y) 转换为具有高/低边界的 Bundle(x)"

#: ../../SpinalHDL/Data types/bundle.rst:130
msgid ""
"The following example saves a Bundle called CommonDataBus into a circular "
"buffer (3rd party memory), reads the Bits out later and converts them back "
"to CommonDataBus format."
msgstr ""
"下面的示例将名为 CommonDataBus "
"的线束保存到循环缓冲区（第三方内存）中，随后读出比特，并将其转换回 "
"CommonDataBus 格式。"

#: ../../SpinalHDL/Data types/bundle.rst:162
msgid "IO Element direction"
msgstr "IO元件方向"

#: ../../SpinalHDL/Data types/bundle.rst:164
msgid ""
"When you define a ``Bundle`` inside the IO definition of your component, you"
" need to specify its direction."
msgstr "当您在组件的 IO 定义中实现 ``Bundle`` 时需要指定其方向。"

#: ../../SpinalHDL/Data types/bundle.rst:167
msgid "in/out"
msgstr "in/out"

#: ../../SpinalHDL/Data types/bundle.rst:169
msgid ""
"If all elements of your bundle go in the same direction you can use "
"``in(MyBundle())`` or ``out(MyBundle())``."
msgstr "如果线束的所有元素中的信号都朝同一方向传播，则可以使用 ``in(MyBundle())`` or "
"``out(MyBundle())``。"

#: ../../SpinalHDL/Data types/bundle.rst:171 types/bundle.rst:190
msgid "For example:"
msgstr "例如："

#: ../../SpinalHDL/Data types/bundle.rst:181
msgid "master/slave"
msgstr "master/slave"

#: ../../SpinalHDL/Data types/bundle.rst:183
msgid ""
"If your interface obeys to a master/slave topology, you can use the "
"``IMasterSlave`` trait. Then you have to implement the function ``def "
"asMaster(): Unit`` to set the direction of each element from the master's "
"perspective. Then you can use the ``master(MyBundle())`` and "
"``slave(MyBundle())`` syntax in the IO definition."
msgstr ""
"如果您的接口遵循主/从拓扑结构，您可以使用 ``IMasterSlave`` 特征。"
"然后你必须实现函数 ``def asMaster(): Unit`` "
"从master的角度设置每个元素的方向。然后你可以在 IO 定义中使用 "
"``master(MyBundle())`` 和 ``slave(MyBundle())`` 语法来使用。"

#: ../../SpinalHDL/Data types/bundle.rst:185
msgid ""
"There are functions defined as toXXX, such as the ``toStream`` method of the"
" ``Flow`` class. These functions can usually be called by the master side. "
"In addition, the fromXXX functions are designed for the slave side. It is "
"common that there are more functions available for the master side than for "
"the slave side."
msgstr ""
"有些函数定义为 toXXX，例如 ``Flow`` 类的 ``toStream`` 方法。这些函数通常可以"
"由master端调用。另外，fromXXX函数是为slave侧设计的。通常master端可用的功能多"
"于slave端。"
