msgid ""
msgstr ""
"Project-Id-Version: SpinalHDLReport-Msgid-Bugs-To:POT-Creation-Date:2023-12-"
"01 11:48+0800PO-Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME "
"<EMAIL@ADDRESS>Language:zh_CNLanguage-Team:zh_CN <LL@li.org>Plural-"
"Forms:nplurals=1; plural=0;MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESSPOT-Creation-Date:2023-12-02 00:23+0800PO-"
"Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME <EMAIL@ADDRESS"
">Language-Team:LANGUAGE <LL@li.org>MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"PO-Revision-Date: 2024-01-12 04:06+0000\n"
"Last-Translator: tsy0123 <675526215@qq.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"spinaldoc-rtd/spinalhdlsimulationsignal/zh_Hans/>\n"
"Language: zh_CN\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bitGenerated-By:Babel 2.13.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.4-dev\n"

#: ../../SpinalHDL/Simulation/signal.rst:2
msgid "Accessing signals of the simulation"
msgstr "仿真过程中访问信号"

#: ../../SpinalHDL/Simulation/signal.rst:5
msgid "Read and write signals"
msgstr "读写信号"

#: ../../SpinalHDL/Simulation/signal.rst:7
msgid ""
"Each interface signal of the toplevel can be read and written from Scala:"
msgstr "顶层模块的每个接口信号都可以从 Scala 程序中读写："

#: ../../SpinalHDL/Simulation/signal.rst:13
#: ../../SpinalHDL/Simulation/signal.rst:124
msgid "Syntax"
msgstr "语法"

#: ../../SpinalHDL/Simulation/signal.rst:14
#: ../../SpinalHDL/Simulation/signal.rst:125
msgid "Description"
msgstr "描述"

#: ../../SpinalHDL/Simulation/signal.rst:15
msgid "``Bool.toBoolean``"
msgstr "``Bool.toBoolean``"

#: ../../SpinalHDL/Simulation/signal.rst:16
msgid "Read a hardware ``Bool`` as a Scala ``Boolean`` value"
msgstr "将硬件 ``Bool`` 读取出来并转换为 Scala ``Boolean`` 值"

#: ../../SpinalHDL/Simulation/signal.rst:17
msgid "``Bits``/``UInt``/``SInt.toInt``"
msgstr "``Bits``/``UInt``/``SInt.toInt``"

#: ../../SpinalHDL/Simulation/signal.rst:18
msgid "Read a hardware ``BitVector`` as a Scala ``Int`` value"
msgstr "将硬件 ``BitVector`` 读取出来并转换为 Scala的 ``Int`` 值"

#: ../../SpinalHDL/Simulation/signal.rst:19
msgid "``Bits``/``UInt``/``SInt.toLong``"
msgstr "``Bits``/``UInt``/``SInt.toLong``"

#: ../../SpinalHDL/Simulation/signal.rst:20
msgid "Read a hardware ``BitVector`` as a Scala ``Long`` value"
msgstr "将硬件 ``BitVector`` 读取出来并转换为 Scala的 ``Long`` 值"

#: ../../SpinalHDL/Simulation/signal.rst:21
msgid "``Bits``/``UInt``/``SInt.toBigInt``"
msgstr "``Bits``/``UInt``/``SInt.toBigInt``"

#: ../../SpinalHDL/Simulation/signal.rst:22
msgid "Read a hardware ``BitVector`` as a Scala ``BigInt`` value"
msgstr "将硬件中的 ``BitVector`` 值读取出来并转换为 Scala中的 ``BigInt`` "
"值（无限位宽）"

#: ../../SpinalHDL/Simulation/signal.rst:23
msgid "``SpinalEnumCraft.toEnum``"
msgstr "``SpinalEnumCraft.toEnum``"

#: ../../SpinalHDL/Simulation/signal.rst:24
msgid ""
"Read a hardware ``SpinalEnumCraft`` as a Scala ``SpinalEnumElement`` value"
msgstr "将硬件中的 ``SpinalEnumCraft`` 读取出来并转换为 Scala 的 "
"``SpinalEnumElement`` 值"

#: ../../SpinalHDL/Simulation/signal.rst:25
msgid "``Bool #= Boolean``"
msgstr "``Bool #= Boolean``"

#: ../../SpinalHDL/Simulation/signal.rst:26
msgid "Assign a hardware ``Bool`` from an Scala ``Boolean``"
msgstr "将 Scala 的 ``Boolean`` 值赋值给硬件 ``Bool``"

#: ../../SpinalHDL/Simulation/signal.rst:27
msgid "``Bits``/``UInt``/``SInt #= Int``"
msgstr "``Bits``/``UInt``/``SInt #= Int``"

#: ../../SpinalHDL/Simulation/signal.rst:28
msgid "Assign a hardware ``BitVector`` from a Scala ``Int``"
msgstr "将 Scala 的 ``Int`` 值赋值给硬件 ``BitVector``"

#: ../../SpinalHDL/Simulation/signal.rst:29
msgid "``Bits``/``UInt``/``SInt #= Long``"
msgstr "``Bits``/``UInt``/``SInt #= Long``"

#: ../../SpinalHDL/Simulation/signal.rst:30
msgid "Assign a hardware ``BitVector`` from a Scala ``Long``"
msgstr "将 Scala 的 ``Long`` 值赋值给硬件 ``BitVector``"

#: ../../SpinalHDL/Simulation/signal.rst:31
msgid "``Bits``/``UInt``/``SInt #= BigInt``"
msgstr "``Bits``/``UInt``/``SInt #= BigInt``"

#: ../../SpinalHDL/Simulation/signal.rst:32
msgid "Assign a hardware ``BitVector`` from a Scala ``BigInt``"
msgstr "将 Scala 的 ``BigInt`` 值赋值给硬件 ``BitVector``"

#: ../../SpinalHDL/Simulation/signal.rst:33
msgid "``SpinalEnumCraft #= SpinalEnumElement``"
msgstr "``SpinalEnumCraft #= SpinalEnumElement``"

#: ../../SpinalHDL/Simulation/signal.rst:34
msgid ""
"Assign a hardware ``SpinalEnumCraft`` from a Scala ``SpinalEnumElement``"
msgstr "将 Scala 的 ``SpinalEnumElement`` 值赋值给硬件 ``SpinalEnumCraft``"

#: ../../SpinalHDL/Simulation/signal.rst:35
msgid "``Data.randomize()``"
msgstr "``Data.randomize()``"

#: ../../SpinalHDL/Simulation/signal.rst:36
msgid "Assign a random value to a SpinalHDL value."
msgstr "将随机值赋值给 SpinalHDL 硬件信号。"

#: ../../SpinalHDL/Simulation/signal.rst:48
msgid "Accessing signals inside the component's hierarchy"
msgstr "访问组件层次结构内部的信号"

#: ../../SpinalHDL/Simulation/signal.rst:50
msgid ""
"To access signals which are inside the component's hierarchy, you have first"
" to set the given signal as ``simPublic``."
msgstr "要访问组件层次结构内部的信号，您必须首先将给定信号设置为 ``simPublic``。"

#: ../../SpinalHDL/Simulation/signal.rst:52
msgid ""
"You can add this ``simPublic`` tag directly in the hardware description:"
msgstr "您可以直接在硬件描述中添加此 ``simPublic`` 标签："

#: ../../SpinalHDL/Simulation/signal.rst:76
msgid ""
"Or you can add it later, after having instantiated your toplevel for the "
"simulation:"
msgstr "或者您可以稍后在实例化仿真的顶层文件中添加它："

#: ../../SpinalHDL/Simulation/signal.rst:108
msgid "Load and Store of Memory in Simulation"
msgstr "仿真中内存的加载和存储"

#: ../../SpinalHDL/Simulation/signal.rst:110
msgid ""
"It is possible to modify the contents of ``Mem`` hardware interface "
"components in simulation.  The `data` argument should be a word-width value "
"with the `address` being the word-address within."
msgstr "可以在仿真中修改 ``Mem`` 硬件接口组件的内容。 `data` "
"参数应该是一个字的位宽的值，`address` 是访问的字的地址。"

#: ../../SpinalHDL/Simulation/signal.rst:114
msgid ""
"There is no API to convert address and/or individual data bits into units "
"other than the natural word size."
msgstr "没有 API 可以将地址和/或单个数据位转换为自然的字位宽以外的单位。"

#: ../../SpinalHDL/Simulation/signal.rst:117
msgid ""
"There is no API to mark any memory location with simulation `X` (undefined) "
"state."
msgstr "没有 API 可以用仿真中的 `X`（未定义）状态来标记任何内存位置。"

#: ../../SpinalHDL/Simulation/signal.rst:126
msgid "``Mem.getBigInt(address: Long): BigInt``"
msgstr "``Mem.getBigInt(address: Long): BigInt``"

#: ../../SpinalHDL/Simulation/signal.rst:127
msgid "Read a word from simulator at the word-address."
msgstr "从仿真器的对应地址处读取一个字。"

#: ../../SpinalHDL/Simulation/signal.rst:128
msgid "``Mem.setBigInt(address: Long, data: BigInt)``"
msgstr "``Mem.setBigInt(address: Long, data: BigInt)``"

#: ../../SpinalHDL/Simulation/signal.rst:129
msgid "Write a word to simulator at the word-address."
msgstr "在地址处向仿真器内的存储器写入一个字。"

#: ../../SpinalHDL/Simulation/signal.rst:131
msgid "Using this simple example using a memory:"
msgstr "这是一个简单的使用内存的示例："

#: ../../SpinalHDL/Simulation/signal.rst:138
msgid "Setting up the simulation we make the memory accessible:"
msgstr "设置仿真环境后，我们可以这样访问内存："

#: ../../SpinalHDL/Simulation/signal.rst:145
msgid ""
"We can read data during simulation, but have to take care that the data is "
"already available (might be a cycle late due to simulation event ordering):"
msgstr "我们可以在仿真期间读取数据，但必须注意确保数据可用（由于仿真器是事件驱动的，"
"这可能会造成一个周期的延迟）："

#: ../../SpinalHDL/Simulation/signal.rst:153
msgid "And can write to memory like so:"
msgstr "并且可以像这样写入内存："

#: ../../SpinalHDL/Simulation/signal.rst:160
msgid ""
"Care has to be taken that due to event ordering in simulation e.g. the read "
"depicted above has to be delayed to when the value is actually available in "
"the memory."
msgstr "必须注意的是，由于仿真器是事件驱动的，例如上面描述的读取操作必须延迟到该值在"
"内存中实际可用后进行。"
