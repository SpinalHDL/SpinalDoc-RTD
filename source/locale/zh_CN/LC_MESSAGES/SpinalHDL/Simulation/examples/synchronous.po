msgid ""
msgstr ""
"Project-Id-Version: SpinalHDLReport-Msgid-Bugs-To:POT-Creation-Date:2023-12-"
"01 11:48+0800PO-Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME "
"<EMAIL@ADDRESS>Language:zh_CNLanguage-Team:zh_CN <LL@li.org>Plural-"
"Forms:nplurals=1; plural=0;MIME-Version:1.0Content-Type:text/plain; "
"charset=UTF-8\n"
"PO-Revision-Date: 2023-12-30 08:06+0000\n"
"Last-Translator: Readon <xydarcher@qq.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"spinaldoc-rtd/spinalhdlsimulationexamplessynchronous/zh_Hans/>\n"
"Language: zh_CN\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bitGenerated-By:Babel 2.13.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.4-dev\n"

#: ../../source/SpinalHDL/Simulation/examples/synchronous.rst:4
msgid "Synchronous adder"
msgstr "同步加法器"

#: ../../source/SpinalHDL/Simulation/examples/synchronous.rst:6
msgid ""
"This example creates a ``Component`` out of sequential logic that does some "
"simple arithmetic on 3 operands."
msgstr "这个例子创建了一个由时序逻辑组成的 ``Component`` ，它对 3 "
"个操作数进行了一些简单的算术运算。"

#: ../../source/SpinalHDL/Simulation/examples/synchronous.rst:8
msgid "The test bench performs the following steps 100 times:"
msgstr "测试平台执行 100 次以下步骤："

#: ../../source/SpinalHDL/Simulation/examples/synchronous.rst:10
msgid ""
"Initialize ``a``, ``b``, and ``c`` to random integers in the 0..255 range."
msgstr "将 ``a``, ``b``, 和 ``c`` 初始化为 0..255 范围内的随机整数。"

#: ../../source/SpinalHDL/Simulation/examples/synchronous.rst:11
msgid ""
"Stimulate the :abbr:`DUT (Device Under Test)`'s matching ``a``, ``b``, ``c``"
" inputs."
msgstr "激励 :abbr:`DUT (Device Under Test)` 匹配 ``a``, ``b``, ``c`` 的输入。"

#: ../../source/SpinalHDL/Simulation/examples/synchronous.rst:12
msgid "Wait until the simulation samples the DUT's signals again."
msgstr "等待直到仿真再次对 DUT 的信号进行采样。"

#: ../../source/SpinalHDL/Simulation/examples/synchronous.rst:13
msgid "Check for correct output."
msgstr "检查输出是否正确。"

#: ../../source/SpinalHDL/Simulation/examples/synchronous.rst:15
msgid ""
"The main difference between this example and the :ref:`Asynchronous adder "
"<sim_example_asynchronous_adder>` example is that this ``Component`` has to "
"use ``forkStimulus`` to generate a clock signal, since it is using "
"sequential logic internally."
msgstr ""
"此示例与异步加法器 :ref:`Asynchronous adder <sim_example_asynchronous_adder>`"
" 示例之间的主要区别在于，此 ``Component`` 必须使用 ``forkStimulus`` "
"来生成时钟信号，因为它在内部使用顺序逻辑。"
