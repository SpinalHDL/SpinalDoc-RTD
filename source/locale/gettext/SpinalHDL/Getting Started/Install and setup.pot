# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018 - 2024, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-27 15:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:4
msgid "Install and setup"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:6
msgid "Spinal is a Scala library (a programming language using the Java VM) so it requires setting up a Scala environment; there are many ways to do so. Also, it generates VHDL, Verilog or SystemVerilog, which can be used by many different tools. This section describes the supported way to install a *SpinalHDL description to Simulation* flow, but there can be many variations."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:13
msgid "Required/Recommended tools"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:15
msgid "Before you download the SpinalHDL tools, you need to install a Scala environment:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:17
msgid "`Java JDK <https://www.oracle.com/java/technologies/downloads/>`_, a Java environment"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:19
msgid "`Scala 2 <https://www.scala-lang.org/>`_, compiler and library"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:20
msgid "`SBT <https://www.scala-sbt.org/download/>`_, a Scala build tool"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:22
msgid "These tools enable to use Spinal; but without any other tools, it is limited to HDL code generation."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:25
msgid "To enable more features we recommend:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:27
msgid "An IDE (for instance the currently recommended `IntelliJ <https://www.jetbrains.com/idea/>`_ with its Scala plugin or `VSCodium <https://vscodium.com/>`_ with Metals extension) to get features such as:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:31
msgid "Code suggestions / completion"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:32
msgid "Automatic build with syntax errors right in the code"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:33
msgid "Generate code with a single click"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:34
msgid "Run simulation / tests with a single click (if a supported simulator is set up)"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:37
msgid "A supported simulator like `Verilator <https://www.veripool.org/verilator/>`_ to test the design right from SpinalHDL."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:39
msgid "`Gtkwave <https://gtkwave.sourceforge.net/>`_ to view the waves generated by Verilator during simulation."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:41
msgid "`Git <https://git-scm.com/>`_ for version control system"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:42
msgid "A C++ toolchain, needed for simulating with Verilator"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:43
msgid "A linux shell, needed for simulating with Verilator"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:46
msgid "Linux Installation"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:48
msgid "At time of writing the recommended way of installing Scala and SBT is via `Coursier <https://get-coursier.io/docs/cli-installation>`_. Coursier is able to in addition to the scala tools install a Java JDK to use, in the example below we install Java from the package manager. We recommend to install JDK 17 (LTS) because of compatibility with the used Scala version."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:53
msgid "For Debian or Ubuntu we run:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:65
msgid "If you want to install the tools for simulation and/or formal proofs, we recommend `oss-cad-suite <https://github.com/YosysHQ/oss-cad-suite-build>`_. It contains a waveform viewer (gtkWave), verilog simulators (verilator and iverilog), VHDL simulator (GHDL) and other tools. In case you want to build the tools yourself have a look at the legacy simulation tool :ref:`installation instructions <sim backend install>`."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:69
msgid "We first install the needed C++ toolchain and download oss-cad-suite. To use it we must load the oss-cad-suite environment for each shell we want to use it in. Note that oss-cad-suite contains a Python 3 interpreter that may interfere with the system Python installation if loaded permanently."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:73
msgid "Go to the oss-cad-suite `release page <https://github.com/YosysHQ/oss-cad-suite-build/releases/latest>`_ to get the download link for the latest version. You can download/extract oss-cad-suite to a folder of your choice. (last tested version of oss-cad-suite is `2023-10-22`, but more recent ones will most likely also work)"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:83
msgid "To use oss-cad-suite in a shell you need to load it's environment, e.g. via ``souce <path to oss-cad-suite>/environment``."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:87
msgid "Mac OS X Installation"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:88
msgid "You can use homebrew to install on Mac OS X.  By default homebrew installs Java 21, but the  SpinalHDL tutorial SpinalTemplateSbt uses Scala version 2.12.16, which is not supported by Java 21 (17 is still the recommended LTS version, https://whichjdk.com/). So to install Java version 1.7 do:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:96
msgid "And then add this to your path."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:102
msgid "To manage multiple versions of Java it is also essential to have jenv installed."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:108
msgid "Jenv added these lines to my .bash_profile"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:115
msgid "Next you have to install scala's interactive build tool sbt."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:121
msgid "If this works for you, please let us know.  If this does not work for you, you can read the github issue about Mac o SX installation here. https://github.com/SpinalHDL/SpinalHDL/issues/1216"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:124
msgid "If you want to install the tools for simulation and/or formal proofs, we recommend `oss-cad-suite <https://github.com/YosysHQ/oss-cad-suite-build>`_."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:127
msgid "Windows installation"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:130
msgid "While a native installation is possible the simpler and currently recommended way is to use WSL on Windows. If you want to use WSL, install `it <https://learn.microsoft.com/en-us/windows/wsl/install>`_, a distribution of your choice and follow the Linux installation instructions. Data in your WSL instance can be accessed from windows under ``\\\\wsl$``. In case you want to use IntelliJ you'll have to download the Linux version to WSL, if you want to use VSCode then the Windows version can be used to remotely edit in WSL."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:136
msgid "At time of writing the recommended way of installing Scala and SBT is via `Coursier <https://get-coursier.io/docs/cli-installation>`_. Coursier is able to in addition to the scala tools install a Java JDK to use, in the example below we install Java manually. We recommend to install JDK 17 (LTS) because of compatibility with Scala."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:141
msgid "First download and install `Adoptium JDK 17 <https://adoptium.net/temurin/releases/?os=windows&version=17>`_. Download, unzip and run the `Coursier installer <https://github.com/coursier/launchers/raw/master/cs-x86_64-pc-win32.zip>`_, when asked agree to an update of your ``PATH`` variable. Reboot to force an update of ``PATH``."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:145
msgid "This is sufficient for generating hardware. For simulation continue with either choice below. In case you want to build the tools yourself have a look at the legacy simulation tool :ref:`installation instructions <sim backend install>`."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:149
msgid "An All-in-One solution offered by SpinalHDL maintainer `Readon <https://github.com/Readon>` is available to install and run SpinalHDL with Verilator simulation and formal verification via SymbiYosys. Download `it <https://github.com/Readon/msys2-installer/releases>`_ and install the environment anywhere on your disk. Start the build environment by clicking on the MSYS2-MINGW64 icon in the Start menu and use the MSYS2 default console. An alternative is to use the Windows Terminal or a Tabby-like application and use the startup command ``%MSYS2_ROOT%\\msys2_shell.cmd -defterm -here -no-start -mingw64``, where the ``%MSYS2_ROOT%`` is the location of the msys2 installation. It is worth noting that if you want to use it offline, you should carefully select the libraries that the project depends on, otherwise you will need to download the packages manually. See the README for the repos for more details."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:158
msgid "MSYS2 verilator for simulation"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:160
msgid "We recommend to install compiler/verilator through `MSYS2 <https://www.msys2.org>`. Other methods of installing gcc/make/shell (e.g. chocolatey, scoop, etc.) may also work but are untested."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:163
msgid "SpinalHDL maintainer `Readon <https://github.com/Readon>` is maintaining a MSYS2 fork that default installs all needed officially available and custom built packages (also maintained by Readon `here <https://github.com/Readon/MINGW-SpinalHDL>`) for simulation and formal verification. It can be found `here <https://github.com/Readon/msys2-installer>`. If used then the packages installed below via ``pacman`` are already installed and those installation steps can be skipped."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:169
msgid "Currently verilator 4.228 is latest available version known to work."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:171
msgid "Download the latest installer and install MSYS2 with default settings. You should get a MSYS2 terminal at the end of the installation, there run:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:184
msgid "In a MSYS2 MINGW64 terminal we need to set some environment variables to make Java/sbt available (you can make these settings persistent by adding them to ``~/.bashrc`` in MSYS2):"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:193
msgid "With this you should be able to run sbt/verilator simulations from MSYS2 terminals (sbt via calling ``sbt.bat``)."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:196
msgid "MSYS2 for formal verification"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:198
msgid "In addition to the steps above we also need to install yosys, sby, z3 and yices. Both yosys(yosys-smtbmc workable) and sby are not available as official MSYS2 packages, but packages are provided by `Readon <https://github.com/Readon>`. If you used their installer then these steps are not needed (you should check if there are newer packages available)."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:212
msgid "OCI Container"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:214
msgid "A container for SpinalHDL development is available as well. The container is hosted at ``ghcr.io/spinalhdl/docker:master`` and can be used with Docker/Podman/Github Codespaces. It is used for the SpinalHDL CI regression and can therefore be an easy way to run the CI commands locally."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:218
msgid "To run the container run e.g. ``podman run -v .:/workspace -it ghcr.io/spinalhdl/docker:master`` in a SpinalHDL project root directory, making the project directory available in ``/workspace``."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:221
msgid "Please consult the documentation of you Distribution (Linux, WSL) or Docker (Windows) on how to install the container runtime you want to use. Multiple editors/IDEs (e.g. VSCode, IntelliJ, Neovide) allow for remote development in a container. Please consult the documentation of the editor on how to do remote development."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:226
msgid "Installing SBT in an internet-free Linux environment"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:229
msgid "If you are not using an air-gapped environment we recommend to go with the normal linux installation. (which is a subset of the installation for an air-gapped environment)"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:233
msgid "Normally, SBT uses online repositories to download and cache your projects dependencies. This cache is located in several folders:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:236
msgid "``~/.sbt``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:237
msgid "``~/.cache/JNA``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:238
msgid "``~/.cache/coursier``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:240
msgid "To set up an internet-free environment, you can:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:242
msgid "Set up an environment with internet (see above)"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:243
msgid "Launch a Spinal command (see :ref:`Using SBT`) to fetch dependencies (for instance using the `getting started <https://github.com/SpinalHDL/SpinalTemplateSbt>`_ repository)"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:246
msgid "Copy the caches to the internet-free environment."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:251
msgid "Create a first SpinalHDL project"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:253
msgid "We have prepared a ready-to-go project for you the: `getting started <https://github.com/SpinalHDL/SpinalTemplateSbt>`_ repository."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:255
msgid "You can `download <https://codeload.github.com/SpinalHDL/SpinalTemplateSbt/zip/master>`_ it, or clone it."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:257
msgid "The following commands clone the project into a new directory named ``MySpinalProject`` and initialize a fresh ``git`` history:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:271
msgid "The directory structure of a project"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:275
msgid "The structure described here is the default structure, but it can be easily modified."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:278
msgid "In the root of the project are the following files:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:281
msgid "File"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:281
msgid "Description"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:283
msgid "``build.sbt``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:283
msgid "Scala configuration for ``sbt``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:284
msgid "``build.sc``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:284
msgid "Scala configuration for ``mill``, an alternative to ``sbt``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:285
msgid "``hw/``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:285
msgid "The folder containing hardware descriptions"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:286
msgid "``project/``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:286
msgid "More Scala configuration"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:287
msgid "``README.md``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:287
msgid "A ``text/markdown`` file describing your project"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:288
msgid "``.gitignore``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:288
msgid "List of files to ignore in versioning"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:289
msgid "``.mill-version``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:289
msgid "More configuration for ``mill``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:290
msgid "``.scalafmt.conf``"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:290
msgid "Configuration of rules to auto-format the code"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:293
msgid "As you probably guessed it, the interesting thing here is ``hw/``. It contains four folders: ``spinal/``, ``verilog/`` and ``vhdl/`` for your IPs and ``gen/`` for IPs generated with Spinal."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:297
msgid "``hw/spinal/`` contains a folder named after your project name. This name must be set in ``build.sbt`` (along with the company name) and in ``build.sc``; and it must be the one in ``package yourprojectname`` at the beginning of ``.scala`` files."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:302
msgid "In ``hw/spinal/yourprojectname/``, are the descriptions of your IPs, simulation tests, formal tests; and there is ``Config.scala``, which contains the configuration of ``Spinal``."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:308
msgid "``sbt`` must be used **only** at the root of the project, in the folder containing ``build.sbt``."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:313
msgid "Using Spinal on SpinalHDL code"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:315
msgid "Now the tutorial shows how to use Spinal on SpinalHDL code depending on your development environment:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:318
msgid ":ref:`Using SBT`"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:319
msgid ":ref:`Using VSCodium`"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:320
msgid ":ref:`Using IntelliJ`"
msgstr ""
