# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018 - 2024, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-02 16:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../SpinalHDL/Getting Started/SBT.rst:4
msgid "Using Spinal from CLI with SBT"
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:6
msgid "First, open a terminal in the root of the template you have downloaded earlier in :ref:`template`."
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:9
msgid "Commands can be executed right from the terminal:"
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:15
msgid "But ``sbt`` has a quite long boot time so the we recommend to use its interactive mode:"
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:22
msgid "Now ``sbt`` shows a prompt. Let's start by doing Scala compilation. It will fetch dependencies so it can take time the first time:"
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:29
msgid "Actually you never need to just ``compile`` as it is done automatically when needed. The first build time will take a few moments longer compared to future builds as the sbt tool builds the entire project from a cold start and then uses incremental building where possible from that point on.  ``sbt`` supports autocompletion inside the interactive shell to assist discovery and usage of the available commands. You can start the interactive shell with ``sbt shell`` or running ``sbt`` with no arguments from the command line."
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:37
msgid "To run a specific HDL code-generation or simulation, the command is ``runMain``. So if you type ``runMain``, space, and tab, you should get this:"
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:47
msgid "The autocompletion suggests all things that can be run. Let's run the Verilog generation for instance:"
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:54
msgid "Look at the directory ./hw/gen/: there is a new ``MyTopLevel.v`` file!"
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:56
msgid "Now add a ``~`` at the beginning of the command:"
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:62
msgid "It prints this:"
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:83
msgid "So now, each time you save a source file, it will re-generate ``MyTopLevel.v``. To do this, it automatically compiles the source files and it performs lint checks. This way you can get errors printed on the terminal almost in real-time while you are editing the source files."
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:88
msgid "You can press Enter to stop automatic generation, then Ctrl-D to exit ``sbt``."
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:90
msgid "It is also possible to start it right from the terminal, without using ``sbt``'s interactive prompt:"
msgstr ""

#: ../../SpinalHDL/Getting Started/SBT.rst:97
msgid "Now you can use your environment, let's explore the code: :ref:`Simple example`."
msgstr ""
