# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018 - 2024, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-02 16:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../SpinalHDL/Design errors/spinal_cant_clone.rst:3
msgid "Spinal can't clone class"
msgstr ""

#: ../../SpinalHDL/Design errors/spinal_cant_clone.rst:6
msgid "Introduction"
msgstr ""

#: ../../SpinalHDL/Design errors/spinal_cant_clone.rst:8
msgid "This error happens when SpinalHDL wants to create a new datatype instance via the ``cloneOf`` function but isn't able to do it. The reason for this is nearly always because it can't retrieve the construction parameters of a ``Bundle``."
msgstr ""

#: ../../SpinalHDL/Design errors/spinal_cant_clone.rst:12
msgid "Example 1"
msgstr ""

#: ../../SpinalHDL/Design errors/spinal_cant_clone.rst:14
#: ../../SpinalHDL/Design errors/spinal_cant_clone.rst:54
msgid "The following code:"
msgstr ""

#: ../../SpinalHDL/Design errors/spinal_cant_clone.rst:27
msgid "will throw:"
msgstr ""

#: ../../SpinalHDL/Design errors/spinal_cant_clone.rst:39
msgid "A fix could be:"
msgstr ""

#: ../../SpinalHDL/Design errors/spinal_cant_clone.rst:52
msgid "Example 2"
msgstr ""

#: ../../SpinalHDL/Design errors/spinal_cant_clone.rst:72
msgid "raises an exeption:"
msgstr ""

#: ../../SpinalHDL/Design errors/spinal_cant_clone.rst:78
msgid "In this case, a solution is to override the clone function to propagate the implicit parameter."
msgstr ""

#: ../../SpinalHDL/Design errors/spinal_cant_clone.rst:90
msgid "We need to clone the hardware element, not the eventually assigned value in it."
msgstr ""

#: ../../SpinalHDL/Design errors/spinal_cant_clone.rst:94
msgid "An alternative is to used :ref:`ScopeProperty <scopeproperty>`."
msgstr ""
