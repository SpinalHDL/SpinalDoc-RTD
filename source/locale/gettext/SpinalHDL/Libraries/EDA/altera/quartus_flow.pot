# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018 - 2024, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-02 16:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:3
msgid "QuartusFlow"
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:5
msgid "A compilation flow is an Altera-defined sequence of commands that use a combination of command-line executables. A full compilation flow launches all Compiler modules in sequence to synthesize, fit, analyze final timing, and generate a device programming file."
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:8
msgid "Tools in `this file <https://github.com/SpinalHDL/SpinalHDL/blob/dev/lib/src/main/scala/spinal/lib/eda/altera/QuartusFlow.scala>`__ help you get rid of redundant Quartus GUI."
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:11
msgid "For a single rtl file"
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:13
msgid "The object ``spinal.lib.eda.altera.QuartusFlow`` can automatically report the used area and maximum frequency of a single rtl file."
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:16
#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:54
msgid "Example"
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:30
msgid "The code above will create a new Quartus project with ``TopLevel.vhd``."
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:33
msgid "This operation will remove the folder ``workspacePath``!"
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:36
msgid "The ``family`` and ``device`` values are passed straight to the Quartus CLI as parameters. Please check the Quartus documentation for the correct value to use in your project."
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:39
msgid "Tip"
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:41
msgid "To test a component that has too many pins, set them as ``VIRTUAL_PIN``."
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:49
msgid "For an existing project"
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:51
msgid "The class ``spinal.lib.eda.altera.QuartusProject`` can automatically find configuration files in an existing project. Those are used for compilation and programming the device."
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:56
msgid "Specify the path that contains your project files like ``.qpf`` and ``.cdf``."
msgstr ""

#: ../../SpinalHDL/Libraries/EDA/altera/quartus_flow.rst:68
msgid "Remember to save the ``.cdf`` of your project before calling ``prj.program()``."
msgstr ""
