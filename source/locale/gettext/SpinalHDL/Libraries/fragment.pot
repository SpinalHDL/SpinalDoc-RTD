# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018 - 2024, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-02 16:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../SpinalHDL/Libraries/fragment.rst:3
msgid "Fragment"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:6
msgid "Specification"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:8
msgid "The ``Fragment`` bundle is the concept of transmitting a \"big\" thing by using multiple \"small\" fragments. For examples :"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:11
msgid "A picture transmitted with width*height transaction on a ``Stream[Fragment[Pixel]]``"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:12
msgid "An UART packet received from an controller without flow control could be transmitted on a ``Flow[Fragment[Bits]]``"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:13
msgid "An AXI read burst could be carried by an ``Stream[Fragment[AxiReadResponse]]``"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:15
msgid "Signals defined by the ``Fragment`` bundle are :"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:21
msgid "Signal"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:22
msgid "Type"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:23
msgid "Driver"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:24
#: ../../SpinalHDL/Libraries/fragment.rst:51
#: ../../SpinalHDL/Libraries/fragment.rst:77
msgid "Description"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:25
msgid "fragment"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:26
msgid "T"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:27
#: ../../SpinalHDL/Libraries/fragment.rst:31
msgid "Master"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:28
msgid "The \"payload\" of the current transaction"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:29
msgid "last"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:30
#: ../../SpinalHDL/Libraries/fragment.rst:53
#: ../../SpinalHDL/Libraries/fragment.rst:56
#: ../../SpinalHDL/Libraries/fragment.rst:59
#: ../../SpinalHDL/Libraries/fragment.rst:62
#: ../../SpinalHDL/Libraries/fragment.rst:65
msgid "Bool"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:32
msgid "High when the fragment is the last of the current packet"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:35
msgid "As you can see with this specification and precedent example, the ``Fragment`` concept doesn't specify how transaction are transmitted (You can use Stream,Flow or any other communication protocol). It only add enough information (\\ ``last``\\ ) to know if the current transaction is the first one, the last one or one in the middle of a given packet."
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:38
msgid "The protocol didn't carry a \\'first\\' bit because it can be generated at any place by doing \\'RegNextWhen(bus.last, bus.fire) init(True)\\'"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:41
msgid "Functions"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:43
msgid "For ``Stream[Fragment[T]]`` and ``Flow[Fragment[T]]``\\ , following function are presents :"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:49
#: ../../SpinalHDL/Libraries/fragment.rst:75
msgid "Syntax"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:50
#: ../../SpinalHDL/Libraries/fragment.rst:76
msgid "Return"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:52
msgid "x.first"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:54
msgid "Return True when the next or the current transaction is/would be the first of a packet"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:55
msgid "x.tail"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:57
msgid "Return True when the next or the current transaction is/would be not the first of a packet"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:58
msgid "x.isFirst"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:60
msgid "Return True when an transaction is present and is the first of a packet"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:61
msgid "x.isTail"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:63
msgid "Return True when an transaction is present and is the not the first/last of a packet"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:64
msgid "x.isLast"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:66
msgid "Return True when an transaction is present and is the last of a packet"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:69
msgid "For ``Stream[Fragment[T]]``\\ , following function are also accessible :"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:78
msgid "x.insertHeader(header : T)"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:79
msgid "Stream[Fragment[T]]"
msgstr ""

#: ../../SpinalHDL/Libraries/fragment.rst:80
msgid "Add the ``header`` to each packet on ``x`` and return the resulting bus"
msgstr ""
