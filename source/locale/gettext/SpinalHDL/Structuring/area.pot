# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018 - 2024, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-02 16:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../SpinalHDL/Structuring/area.rst:2
msgid "Area"
msgstr ""

#: ../../SpinalHDL/Structuring/area.rst:4
msgid "Sometimes, creating a ``Component`` to define some logic is overkill because you:"
msgstr ""

#: ../../SpinalHDL/Structuring/area.rst:6
msgid "Need to define all construction parameters and IO (verbosity, duplication)"
msgstr ""

#: ../../SpinalHDL/Structuring/area.rst:7
msgid "Split your code (more than needed)"
msgstr ""

#: ../../SpinalHDL/Structuring/area.rst:9
msgid "For this kind of case you can use an ``Area`` to define a group of signals/logic:"
msgstr ""

#: ../../SpinalHDL/Structuring/area.rst:0
msgid "In VHDL and Verilog, sometimes prefixes are used to separate variables into logical sections. It is suggested that you use ``Area`` instead  of this in SpinalHDL."
msgstr ""

#: ../../SpinalHDL/Structuring/area.rst:44
msgid "\\ :ref:`ClockingArea <clock_domain>` is a special kind of ``Area`` that allows you to define chunks of hardware which use a given ``ClockDomain``\\"
msgstr ""
