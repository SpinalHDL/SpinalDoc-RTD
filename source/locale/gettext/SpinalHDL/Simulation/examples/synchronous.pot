# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018 - 2024, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-02 16:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../SpinalHDL/Simulation/examples/synchronous.rst:4
msgid "Synchronous adder"
msgstr ""

#: ../../SpinalHDL/Simulation/examples/synchronous.rst:6
msgid "This example creates a ``Component`` out of sequential logic that does some simple arithmetic on 3 operands."
msgstr ""

#: ../../SpinalHDL/Simulation/examples/synchronous.rst:8
msgid "The test bench performs the following steps 100 times:"
msgstr ""

#: ../../SpinalHDL/Simulation/examples/synchronous.rst:10
msgid "Initialize ``a``, ``b``, and ``c`` to random integers in the 0..255 range."
msgstr ""

#: ../../SpinalHDL/Simulation/examples/synchronous.rst:11
msgid "Stimulate the :abbr:`DUT (Device Under Test)`'s matching ``a``, ``b``, ``c`` inputs."
msgstr ""

#: ../../SpinalHDL/Simulation/examples/synchronous.rst:12
msgid "Wait until the simulation samples the DUT's signals again."
msgstr ""

#: ../../SpinalHDL/Simulation/examples/synchronous.rst:13
msgid "Check for correct output."
msgstr ""

#: ../../SpinalHDL/Simulation/examples/synchronous.rst:15
msgid "The main difference between this example and the :ref:`Asynchronous adder <sim_example_asynchronous_adder>` example is that this ``Component`` has to use ``forkStimulus`` to generate a clock signal, since it is using sequential logic internally."
msgstr ""
