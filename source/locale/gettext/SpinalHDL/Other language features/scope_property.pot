# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018 - 2024, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-02 16:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../SpinalHDL/Other language features/scope_property.rst:4
msgid "ScopeProperty"
msgstr ""

#: ../../SpinalHDL/Other language features/scope_property.rst:6
msgid "A scope property is a thing which can store values locally to the current thread. Its API can be used to set/get that value, but also to apply modification to the value for a portion of the execution in a stack manner."
msgstr ""

#: ../../SpinalHDL/Other language features/scope_property.rst:8
msgid "In other words it is a alternative to global variable, scala implicit, ThreadLocal."
msgstr ""

#: ../../SpinalHDL/Other language features/scope_property.rst:10
msgid "To compare with global variable, It allow to run multiple thread running the same code indepedently"
msgstr ""

#: ../../SpinalHDL/Other language features/scope_property.rst:11
msgid "To compare with scala implicit, it is less intrusive in the code base"
msgstr ""

#: ../../SpinalHDL/Other language features/scope_property.rst:12
msgid "To compare with ThreadLocal, it has some API to collect all ScopeProperty and restore them in the same state later on"
msgstr ""
